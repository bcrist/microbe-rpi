// Generated by https://github.com/bcrist/microbe-regz
const chip = @import("chip");
const Mmio = @import("microbe").Mmio;

pub const InterruptType = enum(i8) {
    NMI = -14,
    HardFault = -13,
    SVCall = -5,
    PendSV = -2,
    SysTick = -1,
    TIMER_IRQ_0 = 0,
    TIMER_IRQ_1 = 1,
    TIMER_IRQ_2 = 2,
    TIMER_IRQ_3 = 3,
    PWM_IRQ_WRAP = 4,
    USBCTRL_IRQ = 5,
    XIP_IRQ = 6,
    PIO0_IRQ_0 = 7,
    PIO0_IRQ_1 = 8,
    PIO1_IRQ_0 = 9,
    PIO1_IRQ_1 = 10,
    DMA_IRQ_0 = 11,
    DMA_IRQ_1 = 12,
    IO_IRQ_BANK0 = 13,
    IO_IRQ_QSPI = 14,
    SIO_IRQ_PROC0 = 15,
    SIO_IRQ_PROC1 = 16,
    CLOCKS_IRQ = 17,
    SPI0_IRQ = 18,
    SPI1_IRQ = 19,
    UART0_IRQ = 20,
    UART1_IRQ = 21,
    ADC_IRQ_FIFO = 22,
    I2C0_IRQ = 23,
    I2C1_IRQ = 24,
    RTC_IRQ = 25,
};

pub const VectorTable = extern struct {
    const Handler = chip.interrupts.Handler;
    const unhandled = chip.interrupts.unhandled;

    initial_stack_pointer: *const fn () callconv(.C) void,
    Reset: Handler,
    NMI: Handler = unhandled,
    HardFault: Handler = unhandled,
    _reserved_10: u32 = 0,
    _reserved_14: u32 = 0,
    _reserved_18: u32 = 0,
    _reserved_1c: u32 = 0,
    _reserved_20: u32 = 0,
    _reserved_24: u32 = 0,
    _reserved_28: u32 = 0,
    SVCall: Handler = unhandled,
    _reserved_30: u32 = 0,
    _reserved_34: u32 = 0,
    PendSV: Handler = unhandled,
    SysTick: Handler = unhandled,
    TIMER_IRQ_0: Handler = unhandled,
    TIMER_IRQ_1: Handler = unhandled,
    TIMER_IRQ_2: Handler = unhandled,
    TIMER_IRQ_3: Handler = unhandled,
    PWM_IRQ_WRAP: Handler = unhandled,
    USBCTRL_IRQ: Handler = unhandled,
    XIP_IRQ: Handler = unhandled,
    PIO0_IRQ_0: Handler = unhandled,
    PIO0_IRQ_1: Handler = unhandled,
    PIO1_IRQ_0: Handler = unhandled,
    PIO1_IRQ_1: Handler = unhandled,
    DMA_IRQ_0: Handler = unhandled,
    DMA_IRQ_1: Handler = unhandled,
    IO_IRQ_BANK0: Handler = unhandled,
    IO_IRQ_QSPI: Handler = unhandled,
    SIO_IRQ_PROC0: Handler = unhandled,
    SIO_IRQ_PROC1: Handler = unhandled,
    CLOCKS_IRQ: Handler = unhandled,
    SPI0_IRQ: Handler = unhandled,
    SPI1_IRQ: Handler = unhandled,
    UART0_IRQ: Handler = unhandled,
    UART1_IRQ: Handler = unhandled,
    ADC_IRQ_FIFO: Handler = unhandled,
    I2C0_IRQ: Handler = unhandled,
    I2C1_IRQ: Handler = unhandled,
    RTC_IRQ: Handler = unhandled,
};

pub const adc = @import("reg_types/adc.zig");

pub const clk = @import("reg_types/clk.zig");

pub const cortex = @import("reg_types/cortex.zig");

pub const dma = @import("reg_types/dma.zig");

pub const i2c = @import("reg_types/i2c.zig");

pub const io = @import("reg_types/io.zig");

pub const pio = @import("reg_types/pio.zig");

pub const pwm = @import("reg_types/pwm.zig");

pub const spi = @import("reg_types/spi.zig");

pub const sys = @import("reg_types/sys.zig");

pub const uart = @import("reg_types/uart.zig");

pub const usb = @import("reg_types/usb.zig");
