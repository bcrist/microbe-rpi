(group ""
    (peripheral PADS_* (move-to-group io))
    (peripheral IO_* (move-to-group io))
    (peripheral PIO* (move-to-group pio))
    (peripheral PWM (move-to-group pwm))
    (peripheral I2C* (move-to-group i2c))
    (peripheral SPI* (move-to-group spi))
    (peripheral UART* (move-to-group uart))
    (peripheral ADC (move-to-group adc))
    (peripheral DMA (move-to-group dma))
    (peripheral USB* (move-to-group usb))

    (peripheral SYS* (move-to-group sys))
    (peripheral SIO (move-to-group sys))
    (peripheral VREG_AND_CHIP_RESET (move-to-group sys))
    (peripheral BUSCTRL (move-to-group sys))
    (peripheral RESETS (move-to-group sys))
    (peripheral PSM (move-to-group sys))
    (peripheral WATCHDOG (move-to-group sys))
    (peripheral XIP_CTRL (move-to-group sys))
    (peripheral XIP_SSI (move-to-group sys))

    (peripheral XOSC (move-to-group clk))
    (peripheral ROSC (move-to-group clk))
    (peripheral CLOCKS (move-to-group clk))
    (peripheral RTC (move-to-group clk))
    (peripheral PLL_* (move-to-group clk))
    (peripheral TIMER (move-to-group clk))

    (peripheral PPB (delete))
    (peripheral TBMAN (delete))
)
(group io
    (create-enum Drive (bits 2)
        (value 0 2mA)
        (value 1 4mA)
        (value 2 8mA)
        (value 3 12mA)
    )
    (peripheral PADS_*
        (reg * (type
            (field DRIVE (set-type Drive))
        ))
    )
    (peripheral PADS_BANK0
        (reg GPIO* (type (rename IO_PD)))
        (reg SWCLK (type (rename IO_PU_OD)))
        (reg SWD (type (rename IO_PU)))
    )
    (peripheral PADS_QSPI
        (reg GPIO_QSPI_SCLK (type (rename IO_PD)))
        (reg GPIO_QSPI_SD* (type (rename IO)))
        (reg GPIO_QSPI_SS (type (rename IO_PU)))
    )
    (create-enum ModeOverride (bits 2)
        (value 0 normal)
        (value 1 invert)
        (value 2 force_low)
        (value 3 force_high)
    )
    (peripheral IO_*
        (reg * (type
            (field OEOVER (set-type ModeOverride))
            (field IRQOVER (set-type ModeOverride))
            (field INOVER (set-type ModeOverride))
            (field OUTOVER (set-type ModeOverride))
        ))
        (reg GPIO*_STATUS (type (rename IO_STATUS)))
        (reg INTR0 (type (rename IO_INT_0)))
        (reg INTR1 (type (rename IO_INT_1)))
        (reg INTR2 (type (rename IO_INT_2)))
        (reg INTR3 (type (rename IO_INT_3)))
        (reg PROC#_INT*0 (type (rename IO_INT_0)))
        (reg PROC#_INT*1 (type (rename IO_INT_1)))
        (reg PROC#_INT*2 (type (rename IO_INT_2)))
        (reg PROC#_INT*3 (type (rename IO_INT_3)))
        (reg DORMANT_WAKE_INT*0 (type (rename IO_INT_0)))
        (reg DORMANT_WAKE_INT*1 (type (rename IO_INT_1)))
        (reg DORMANT_WAKE_INT*2 (type (rename IO_INT_2)))
        (reg DORMANT_WAKE_INT*3 (type (rename IO_INT_3)))
    )
    (peripheral IO_QSPI
        (reg INTR (type (rename IO_INT_QSPI)))
        (reg PROC#_INT* (type (rename IO_INT_QSPI)))
        (reg DORMANT_WAKE_INT* (type (rename IO_INT_QSPI)))
    )
)
(group pio
)
(group pwm
)
(group i2c
)
(group spi
)
(group uart
)
(group adc
)
(group dma
)
(group usb
    (create-enum EndpointType (bits 2)
        (value 0 Control)
        (value 1 Isochronous)
        (value 2 Bulk)
        (value 3 Interrupt)
    )
    (peripheral USBCTRL_DPRAM
        (reg EP*_IN_CONTROL (type (rename EP_CONTROL)))
        (reg EP*_OUT_CONTROL (type (rename EP_CONTROL)))
        (reg EP*_IN_BUFFER_CONTROL (type (rename EP_BUFFER_CONTROL)))
        (reg EP*_OUT_BUFFER_CONTROL (type (rename EP_BUFFER_CONTROL)))
        (set-typename BUF)
        (rename USB_BUF)
    )
    (peripheral USBCTRL_REGS
        (reg ADDR_ENDP* (type (rename ADDR_ENDP)))
        (reg BUFF_STATUS (type (rename EndpointBitmap)))
        (reg BUFF_CPU_SHOULD_HANDLE (type (rename EndpointBitmap)))
        (reg EP_ABORT* (type (rename EndpointBitmap)))
        (reg EP_STATUS_STALL_NAK (type (rename EndpointBitmap)))
        (reg INT* (type (rename USB_INT)))
        (set-typename REGS)
        (rename USB)
    )
)
(group sys
)
(group clk
    (peripheral PLL_* (set-typename PLL))
)
(group cortex
    (create-enum EnableFlag (bits 1)
        (value 0 disabled)
        (value 1 enabled)
    )
    (create-enum InterruptEnable (bits 1)
        (value 0 interrupt_disabled)
        (value 1 interrupt_enabled)
    )
    (create-enum SystickClockSource (bits 1)
        (value 0 watchdog_tick)
        (value 1 clk_ref)
    )
    (create-enum OverflowFlag (bits 1)
        (value 0 waiting)
        (value 1 reached_zero)
    )
    (create-packed STK_CSR (bits 32)
        (field ENABLE EnableFlag)
        (field TICKINT InterruptEnable)
        (field CLKSOURCE SystickClockSource)
        (field COUNTFLAG OverflowFlag (offset 16))
    )
    (create-packed STK_RVR (bits 32)
        (field RELOAD u24)
    )
    (create-packed STK_CVR (bits 32)
        (field CURRENT u24)
    )
    (create-packed STK_CALIB (bits 32)
        (field TENMS u24)
        (field SKEW u1 (offset 30))
        (field NOREF u1 (offset 31))
    )
    (create-peripheral SYSTICK
        (offset 0xE000E010)
        (reg CSR STK_CSR)
        (reg RVR STK_RVR)
        (reg CVR STK_CVR)
        (reg CALIB STK_CALIB (access read-only))
    )

    (create-packed SCB_CPUID (bits 32)
        (field REVISION u4 (default 1))
        (field PARTNO u12 (default 0xC60))
        (field ARCHITECTURE u4 (default 0xC))
        (field VARIANT u4)
        (field IMPLEMENTER u8 (default 0x41))
    )
    (create-packed SCB_ICSR (bits 32)
        (field VECTACTIVE u9)
        (field VECTPENDING u9 (offset 12))
        (field ISRPENDING u1 (offset 22))
        (field ISRPREEMPT u1)
        (field PENDSTCLR u1 (offset 25))
        (field PENDSTSET u1)
        (field PENDSVCLR u1)
        (field PENDSVSET u1)
        (field NMIPENDSET u1 (offset 31))
    )
    (create-packed SCB_VTOR (bits 32)
        (field TBLOFF u24 (offset 8))
    )
    (create-packed SCB_AIRCR (bits 32)
        (field VECTCLRACTIVE u1 (offset 1))
        (field SYSRESETREQ u1)
        (field ENDIANESS u1 (offset 15))
        (field VECTKEY u16)
    )
    (create-packed SCB_SCR (bits 32)
        (field SLEEPONEXIT u1 (offset 1))
        (field SLEEPDEEP u1)
        (field SEVONPEND u1 (offset 4))
    )
    (create-packed SCB_CCR (bits 32)
        (field UNALIGN_TRP u1 (offset 3))
        (field STKALIGN u1 (offset 9))
    )
    (create-packed SCB_SHPR2 (bits 32)
        (field SVCALLPRI u8 (offset 24))
    )
    (create-packed SCB_SHPR3 (bits 32)
        (field PENDSVPRI u8 (offset 16))
        (field SYSTICKPRI u8 (offset 24))
    )
    (create-packed SCB_SHCSR (bits 32)
        (field SVCALL u1 (offset 15))
    )
    (create-peripheral SCB
        (offset 0xE000ED00)
        (reg CPUID SCB_CPUID (access read-only))
        (reg ICSR SCB_ICSR)
        (reg VTOR SCB_VTOR)
        (reg AIRCR SCB_AIRCR)
        (reg SCR SCB_SCR)
        (reg CCR SCB_CCR (access read-only))
        (reg SHPR2 SCB_SHPR2 (offset 0x1C))
        (reg SHPR3 SCB_SHPR3)
        (reg SHCSR SCB_SHCSR)
    )

    (create-packed MPU_TYPE (bits 32)
        (field SEPARATE u1)
        (field DREGION u8 (offset 8))
        (field IREGION u8 (offset 16))
    )
    (create-packed MPU_CTRL (bits 32)
        (field ENABLE u1)
        (field HFNMIENA u1)
        (field PRIVDEFENA u1)
    )
    (create-packed MPU_RNR (bits 32)
        (field REGION u4)
    )
    (create-packed MPU_RBAR (bits 32)
        (field REGION u4)
        (field VALID u1)
        (field ADDR u24 (offset 8))
    )
    (create-packed MPU_RASR (bits 32)
        (field ENABLE u1)
        (field SIZE u5)
        (field SRD u8 (offset 8))
        (field B u1)
        (field C u1)
        (field S u1)
        (field AP u3 (offset 24))
        (field XN u1 (offset 28))
    )
    (create-peripheral MPU
        (offset 0xE000ED90)
        (reg TYPE MPU_TYPE (access read-only))
        (reg CTRL MPU_CTRL)
        (reg RNR MPU_RNR)
        (reg RBAR MPU_RBAR)
        (reg RASR MPU_RASR)
    )
)
