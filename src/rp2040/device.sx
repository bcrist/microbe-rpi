(group ""
    (peripheral PADS_* (move-to-group io))
    (peripheral IO_* (delete))
    (peripheral PIO* (move-to-group pio))
    (peripheral PWM (move-to-group pwm))
    (peripheral I2C* (move-to-group i2c))
    (peripheral SPI* (move-to-group spi))
    (peripheral UART* (move-to-group uart))
    (peripheral ADC (move-to-group adc))
    (peripheral DMA (move-to-group dma))
    (peripheral USB* (move-to-group usb))

    (peripheral SYS* (move-to-group sys))
    (peripheral SIO (move-to-group sys))
    (peripheral VREG_AND_CHIP_RESET (move-to-group sys))
    (peripheral BUSCTRL (move-to-group sys))
    (peripheral RESETS (move-to-group sys))
    (peripheral PSM (move-to-group sys))
    (peripheral WATCHDOG (move-to-group sys))
    (peripheral XIP_CTRL (move-to-group sys))
    (peripheral XIP_SSI (move-to-group sys))

    (peripheral XOSC (move-to-group clk))
    (peripheral ROSC (move-to-group clk))
    (peripheral CLOCKS (move-to-group clk))
    (peripheral RTC (move-to-group clk))
    (peripheral PLL_* (move-to-group clk))
    (peripheral TIMER (move-to-group clk))
    (peripheral PPB (delete))
    (peripheral TBMAN (delete))
)
(group io
    (create-type DriveStrength
        (bits 2)
        (enum
            (0 2mA)
            (1 4mA)
            (2 8mA)
            (3 12mA)
        )
    )
    (create-type SlewRate
        (bits 1)
        (enum
            (0 slow)
            (1 fast)
        )
    )
    (create-type PinMaintenance
        (bits 2)
        (enum
            (0 float)
            (1 pull_down)
            (2 pull_up)
        )
    )
    (create-type ModeOverride
        (bits 2)
        (enum
            (0 normal)
            (1 invert)
            (2 force_low)
            (3 force_high)
        )
    )
    (peripheral PADS_*
        (type
            (field VOLTAGE_SELECT (rename voltage))
        )
        (reg voltage (rename VoltageSelect) (field VOLTAGE_SELECT (rename voltage)))
        (reg * 
            (field DRIVE (rename strength) (set-type DriveStrength))
            (field SLEWFAST (rename speed) (set-type SlewRate))
            (field SCHMITT (rename hysteresis) (set-type bool))
            (merge-field PDE maintenance PinMaintenance)
            (field IE (rename input_enabled) (set-type bool))
            (field OD (rename output_disabled) (set-type bool))
        )
    )
    (peripheral PADS_BANK0
        (type
            (field GPIO0 (type (inner (rename PadConfig))))
            (delete-field GPIO*)
            (create-field gpio (offset 4)
                (type (array 30 (reg PadConfig)))
            )
            (field SWCLK (rename swclk))
            (field SWD (rename swdio))
            (rename PADS)
        )
        (rename PADS)
    )
    (peripheral PADS_QSPI
        (type
            (field GPIO_QSPI_SCLK
                (rename sclk)
                (type (inner
                    (set-name "")
                    (set-fallback-name "")
                ))
            )
            (field GPIO_QSPI_SD0
                (rename sd)
                (type (inner (set-name QspiPadConfigFloat)))
                (set-type (array 4 (reg QspiPadConfigFloat)))
            )
            (delete-field GPIO_QSPI_SD*)
            (field GPIO_QSPI_SS
                (rename ss)
                (type (inner (set-name QspiPadConfigPullUp)))
            )
        )
    )
    (create-type IoStatus
        (bits 32)
        (packed
            (output_internal "Before override/inversion" (type u1) (offset 8))
            (output_pad "After override/inversion" (type u1))
            (oe_internal "Before override/inversion" (type u1) (offset 12))
            (oe_pad "After override/inversion" (type u1))
            (input_pad "Before override/inversion" (type u1) (offset 17))
            (input_internal "After override/inversion" (type u1) (offset 19))
            (irq_pad "Before override/inversion" (type u1) (offset 24))
            (irq_internal "After override/inversion" (type u1) (offset 26))
        )
    )
    (create-type IoFunction
        (bits 5)
        (enum
            (0 jtag)
            (1 spi)
            (2 uart)
            (3 i2c)
            (4 pwm)
            (5 sio)
            (6 pio0)
            (7 pio1)
            (8 clock)
            (9 usb)
            (0x1f disable)
        )
    )
    (create-type QspiFunction
        (bits 5)
        (enum
            (0 ssi)
            (5 sio)
            (0x1f disable)
        )
    )
    (create-type IoControl
        (bits 32)
        (packed 
            (func (type IoFunction) (default 0x1F))
            (output_override (type ModeOverride) (offset 8))
            (oe_override (type ModeOverride) (offset 12))
            (input_override (type ModeOverride) (offset 16))
            (irq_override (type ModeOverride) (offset 28))
        )
    )
    (create-type QspiControl
        (bits 32)
        (packed 
            (func (type QspiFunction) (default 0x1F))
            (output_override (type ModeOverride) (offset 8))
            (oe_override (type ModeOverride) (offset 12))
            (input_override (type ModeOverride) (offset 16))
            (irq_override (type ModeOverride) (offset 28))
        )
    )
    (create-type IoStatusControl
        (struct
            (status (type (reg IoStatus)))
            (control (type (reg IoControl)))
        )
    )
    (create-type QspiStatusControl
        (struct
            (status (type (reg IoStatus)))
            (control (type (reg QspiControl)))
        )
    )
    (create-peripheral IO
        (base 0x40014000)
        (type (array 30 IoStatusControl) (inline never))
    )
    (create-peripheral IO_QSPI
        (base 0x40018000)
        (type (struct
            (sclk (type QspiStatusControl))
            (ss (type QspiStatusControl))
            (sd (type (array 4 QspiStatusControl)))
        ))
    )
    (create-type InterruptBitmap
        (struct
            (gpio_0_to_7 (type (reg (name InterruptBitmap0) (bits 32) (packed
                (gpio0_low)
                (gpio0_high)
                (gpio0_falling)
                (gpio0_rising)

                (gpio1_low)
                (gpio1_high)
                (gpio1_falling)
                (gpio1_rising)

                (gpio2_low)
                (gpio2_high)
                (gpio2_falling)
                (gpio2_rising)

                (gpio3_low)
                (gpio3_high)
                (gpio3_falling)
                (gpio3_rising)

                (gpio4_low)
                (gpio4_high)
                (gpio4_falling)
                (gpio4_rising)

                (gpio5_low)
                (gpio5_high)
                (gpio5_falling)
                (gpio5_rising)

                (gpio6_low)
                (gpio6_high)
                (gpio6_falling)
                (gpio6_rising)

                (gpio7_low)
                (gpio7_high)
                (gpio7_falling)
                (gpio7_rising)
            ))))
            (gpio_8_to_15 (type (reg (name InterruptBitmap1) (bits 32) (packed
                (gpio8_low)
                (gpio8_high)
                (gpio8_falling)
                (gpio8_rising)

                (gpio9_low)
                (gpio9_high)
                (gpio9_falling)
                (gpio9_rising)

                (gpio10_low)
                (gpio10_high)
                (gpio10_falling)
                (gpio10_rising)

                (gpio11_low)
                (gpio11_high)
                (gpio11_falling)
                (gpio11_rising)

                (gpio12_low)
                (gpio12_high)
                (gpio12_falling)
                (gpio12_rising)

                (gpio13_low)
                (gpio13_high)
                (gpio13_falling)
                (gpio13_rising)

                (gpio14_low)
                (gpio14_high)
                (gpio14_falling)
                (gpio14_rising)

                (gpio15_low)
                (gpio15_high)
                (gpio15_falling)
                (gpio15_rising)
            ))))
            (gpio_16_to_23 (type (reg (name InterruptBitmap2) (bits 32) (packed
                (gpio16_low)
                (gpio16_high)
                (gpio16_falling)
                (gpio16_rising)

                (gpio17_low)
                (gpio17_high)
                (gpio17_falling)
                (gpio17_rising)

                (gpio18_low)
                (gpio18_high)
                (gpio18_falling)
                (gpio18_rising)

                (gpio19_low)
                (gpio19_high)
                (gpio19_falling)
                (gpio19_rising)

                (gpio20_low)
                (gpio20_high)
                (gpio20_falling)
                (gpio20_rising)

                (gpio21_low)
                (gpio21_high)
                (gpio21_falling)
                (gpio21_rising)

                (gpio22_low)
                (gpio22_high)
                (gpio22_falling)
                (gpio22_rising)

                (gpio23_low)
                (gpio23_high)
                (gpio23_falling)
                (gpio23_rising)
            ))))
            (gpio_24_to_29 (type (reg (name InterruptBitmap3) (bits 32) (packed
                (gpio24_low)
                (gpio24_high)
                (gpio24_falling)
                (gpio24_rising)

                (gpio25_low)
                (gpio25_high)
                (gpio25_falling)
                (gpio25_rising)

                (gpio26_low)
                (gpio26_high)
                (gpio26_falling)
                (gpio26_rising)

                (gpio27_low)
                (gpio27_high)
                (gpio27_falling)
                (gpio27_rising)

                (gpio28_low)
                (gpio28_high)
                (gpio28_falling)
                (gpio28_rising)

                (gpio29_low)
                (gpio29_high)
                (gpio29_falling)
                (gpio29_rising)
            ))))
        )
    )
    (copy-type InterruptBitmap InterruptBitmapReadOnly
        (field * (type (set-access r)))
    )
    (create-type InterruptEnableForceStatus
        (struct
            (enable (type InterruptBitmap))
            (force (type InterruptBitmap))
            (status (type InterruptBitmapReadOnly))
        )
    )
    (create-peripheral IO_INT
        (base 0x400140F0)
        (type (struct
            (interrupt_status "Write 1 to clear edge interrupt flags" (type InterruptBitmap))
            (core0 (type InterruptEnableForceStatus))
            (core1 (type InterruptEnableForceStatus))
            (dormant_wake (type InterruptEnableForceStatus))
        ))
    )
    (create-type QspiInterruptBitmap
        (bits 32)
        (packed
            (sclk_low)
            (sclk_high)
            (sclk_falling)
            (sclk_rising)

            (ss_low)
            (ss_high)
            (ss_falling)
            (ss_rising)

            (sd0_low)
            (sd0_high)
            (sd0_falling)
            (sd0_rising)

            (sd1_low)
            (sd1_high)
            (sd1_falling)
            (sd1_rising)

            (sd2_low)
            (sd2_high)
            (sd2_falling)
            (sd2_rising)

            (sd3_low)
            (sd3_high)
            (sd3_falling)
            (sd3_rising)
        )
    )
    (create-type QspiInterruptEnableForceStatus
        (struct
            (enable (type (reg QspiInterruptBitmap)))
            (force (type (reg QspiInterruptBitmap)))
            (status (type (reg r QspiInterruptBitmap)))
        )
    )
    (create-peripheral IO_QSPI_INT
        (base 0x40018030)
        (type (struct
            (interrupt_status "Write 1 to clear edge interrupt flags" (type (reg QspiInterruptBitmap)))
            (core0 (type QspiInterruptEnableForceStatus))
            (core1 (type QspiInterruptEnableForceStatus))
            (dormant_wake (type QspiInterruptEnableForceStatus))
        ))
    )
)
(group pio
)
(group pwm
)
(group i2c
)
(group spi
)
(group uart
)
(group adc
)
(group dma
)
(group usb
    (create-type EndpointType
        (bits 2)
        (enum
            (0 Control)
            (1 Isochronous)
            (2 Bulk)
            (3 Interrupt)
        )
    )
    (peripheral USBCTRL_DPRAM
        (reg EP*_IN_CONTROL (rename EP_CONTROL))
        (reg EP*_OUT_CONTROL (rename EP_CONTROL))
        (reg EP*_IN_BUFFER_CONTROL (rename EP_BUFFER_CONTROL))
        (reg EP*_OUT_BUFFER_CONTROL (rename EP_BUFFER_CONTROL))
        (type (rename BUF))
        (rename USB_BUF)
    )
    (peripheral USBCTRL_REGS
        (reg ADDR_ENDP* (set-fallback-name ADDR_ENDP))
        (reg BUFF_STATUS (rename EndpointBitmap))
        (reg BUFF_CPU_SHOULD_HANDLE (rename EndpointBitmap))
        (reg EP_ABORT* (set-fallback-name EndpointBitmap))
        (reg EP_STATUS_STALL_NAK (rename EndpointBitmap))
        (reg INT* (set-fallback-name USB_INT))
        (type (rename REGS))
        (rename USB)
    )
)
(group sys
    (peripheral XIP_SSI
        (type
            (field CTRLR0
                (rename control_0)
                (type (inner
                    (delete-field DFS)
                    (field FRF
                        (rename frame_format)
                        (set-type (enum
                            (0 spi)
                            (1 ssp)
                            (2 microwire)
                        ))
                    )
                    (field SCPH
                        (rename clock_phase)
                    )
                    (field SCPOL
                        (rename clock_polarity)
                    )
                    (field TMOD
                        (rename transfer_mode)
                        (set-type (enum
                            (0 tx_and_rx)
                            (1 tx_only "not for SPI_frame_format == .standard")
                            (2 rx_only "not for SPI_frame_format == .standard")
                            (3 eeprom_read "tx then rx")
                        ))
                    )
                    (field SLV_OE
                        (rename slave_output_enable)
                    )
                    (field SRL
                        (set-desc "test mode")
                        (rename shift_register_loop)
                    )
                    (field CFS
                        (rename control_frame_size)
                        (set-type (enum
                            (0 _1_bit)
                            (1 _2_bits)
                            (2 _3_bits)
                            (3 _4_bits)
                            (4 _5_bits)
                            (5 _6_bits)
                            (6 _7_bits)
                            (7 _8_bits)
                            (8 _9_bits)
                            (9 _10_bits)
                            (10 _11_bits)
                            (11 _12_bits)
                            (12 _13_bits)
                            (13 _14_bits)
                            (14 _15_bits)
                            (15 _16_bits)
                        ))
                    )
                    (field DFS_32
                        (rename data_frame_size)
                        (set-type (enum
                            (0 _1_bit)
                            (1 _2_bits)
                            (2 _3_bits)
                            (3 _4_bits)
                            (4 _5_bits)
                            (5 _6_bits)
                            (6 _7_bits)
                            (7 _8_bits)
                            (8 _9_bits)
                            (9 _10_bits)
                            (10 _11_bits)
                            (11 _12_bits)
                            (12 _13_bits)
                            (13 _14_bits)
                            (14 _15_bits)
                            (15 _16_bits)
                            (16 _17_bits)
                            (17 _18_bits)
                            (18 _19_bits)
                            (19 _20_bits)
                            (20 _21_bits)
                            (21 _22_bits)
                            (22 _23_bits)
                            (23 _24_bits)
                            (24 _25_bits)
                            (25 _26_bits)
                            (26 _27_bits)
                            (27 _28_bits)
                            (28 _29_bits)
                            (29 _30_bits)
                            (30 _31_bits)
                            (31 _32_bits)
                        ))
                    )
                    (field SPI_FRF
                        (rename spi_frame_format)
                        (set-desc "Only valid when frame_format is .spi")
                        (set-type (enum
                            (0 standard)
                            (1 dual)
                            (2 quad)
                        ))
                    )
                    (field SSTE
                        (rename slave_select_toggle_enable)
                    )
                ))
            )
            (field CTRLR1
                (rename control_1)
                (type (inner
                    (field NDF
                        (rename num_data_frames)
                        (set-desc "N+1 data frames will be transferred")
                    )
                ))
            )
            (field SSIENR
                (rename enable)
                (type (inner
                    (field SSI_EN (rename enable) (set-type bool))
                ))
            )
            (field BAUDR
                (rename baud_rate)
                (type (inner
                    (field SCKDV (rename clock_divisor) (set-desc "LSB must be 0"))
                ))
            )
            (field RX_SAMPLE_DLY
                (rename rx_sample_delay)
                (type (inner
                    (field RSD (rename delay))
                ))
            )
            (field SR
                (rename status)
                (type (set-access r) (inner
                    (field BUSY (rename busy) (set-type bool))
                    (field TFNF (rename tx_fifo_not_full) (set-type bool))
                    (field TFE (rename tx_fifo_empty) (set-type bool))
                    (field RFNE (rename rx_fifo_not_empty) (set-type bool))
                    (field RFF (rename rx_fifo_full) (set-type bool))
                    (field TXE (rename tx_error_flag) (set-type bool))
                    (field DCOL (rename data_collision_error_flag) (set-type bool))
                ))
            )
            (field DR0
                (rename data)
                (set-type (array 36 (reg u32)))
            )
            (field SPI_CTRLR0
                (rename spi_control)
                (type (inner
                    (field TRANS_TYPE
                        (rename transfer_format)
                        (set-type (enum
                            (0 standard_command_standard_address)
                            (1 standard_command_wide_address)
                            (2 wide_command_wide_address)
                        ))
                    )
                    (field ADDR_L
                        (rename address_length)
                        (set-type (enum
                            (0 none)
                            (1 _4_bits)
                            (2 _8_bits)
                            (3 _12_bits)
                            (4 _16_bits)
                            (5 _20_bits)
                            (6 _24_bits)
                            (7 _28_bits)
                            (8 _32_bits)
                            (9 _36_bits)
                            (10 _40_bits)
                            (11 _44_bits)
                            (12 _48_bits)
                            (13 _52_bits)
                            (14 _56_bits)
                            (15 _60_bits)
                        ))
                    )
                    (field INST_L
                        (rename command_length)
                        (set-type (enum
                            (0 none)
                            (1 _4_bits)
                            (2 _8_bits)
                            (3 _16_bits)
                        ))
                    )
                    (field WAIT_CYCLES
                        (rename wait_cycles_after_mode)
                    )
                    (field SPI_DDR_EN
                        (rename ddr_address_and_data)
                        (set-type bool)
                    )
                    (field INST_DDR_EN
                        (rename ddr_command)
                        (set-type bool)
                    )
                    (field SPI_RXDS_EN
                        (rename enable_read_data_strobe)
                        (set-type bool)
                    )
                    (field XIP_CMD
                        (rename xip_command_or_mode)
                        (set-desc "When command_length is 8 bits, this command is sent for each XIP transfer.\\nWhen command_length is 0, it is appended to the address.")
                    )
                ))
            )
            (rename SSI)
        )
        (rename SSI)
    )
)
(group clk
    (peripheral PLL_* (type (rename PLL)))
)
(group cortex
    (create-peripheral SYSTICK
        (base 0xE000E010)
        (type (struct
            (control_status (type (reg (bits 32) (packed
                (count_enable (type bool))
                (overflow_interrupt_enable
                    "Note the interrupt is triggered even if overflow_flag has not been cleared since the last overflow"
                    (type bool)
                )
                (clock_source (type (enum
                    (0 watchdog_tick)
                    (1 clk_sys)
                )))
                (overflow_flag "Read-only; resets to 0 when read" (type bool) (offset 16))
            ))))
            (reload_value (type (reg (bits 32) (packed
                (value (type u24))
            ))))
            (current_value (type (reg (bits 32) (packed
                (value (type u24))
            ))))
            (calibration (type (reg r (bits 32) (packed
                (ten_ms_count (type u24))
                (calibration_inexact (type bool) (offset 30))
                (no_ref_clock (type bool) (offset 31))
            ))))
        ))
    )
    (create-type Exception
        (bits 9)
        (ext chip "@enumFromInt(")
    )
    (create-peripheral SCB
        (base 0xE000ED00)
        (type (struct
            (chip_id "a.k.a. CPUID" (type (reg r (bits 32) (packed
                (revision (type u4) (default 1))
                (part_num (type u12) (default 0xC60))
                (architecture (type u4) (default 0xC))
                (variant (type u4))
                (implementer (type u8) (default 0x41))
            ))))
            (interrupt_control_state "a.k.a. ICSR" (type (reg (bits 32) (packed
                (active_exception_number (type Exception))
                (pending_exception_number (type Exception) (offset 12))
                (interrupt_pending "Only includes external interrupts (i.e. exception number >= 16)" (type bool) (offset 22))
                (isr_preempt "Only available when core is halted" (type bool))
                (clear_pending_SysTick (type bool) (offset 25))
                (set_pending_SysTick "reads true if SysTick is pending" (type bool))
                (clear_pending_PendSV (type bool))
                (set_pending_PendSV "reads true if PendSV is pending" (type bool))
                (set_pending_NMI "reads true if NMI is pending" (type bool) (offset 31))
            ))))
            (vector_table "N.B. The vector table must be align(256)!\\na.k.a. VTOR"
                (type (reg (bits 32) (name VectorTablePointer) (ext vt.zig)))
            )
            (reset_control "a.k.a. AIRCR" (type (reg (bits 32) (packed
                (request_clear_active_exception "Only available when core is halted" (type bool) (offset 1))
                (request_core_reset (type bool))
                (endianness 
                    (offset 15)
                    (type (enum
                        (0 little)
                        (1 big)
                    ))
                )
                (vector_key (type u16) (default 0x05FA))
            ))))
            (system_control "a.k.a. SCR" (type (reg (bits 32) (packed
                (sleep_on_exception_exit (type bool) (offset 1))
                (deep_sleep_enable (type bool))
                (send_event_on_pending_interrupt (type bool) (offset 4))
            ))))
            (configuration "a.k.a. CCR" (type (reg r (bits 32) (packed
                (unaligned_access_is_HardFault (type bool) (default 1) (offset 3))
                (exception_stack_align_8 (type bool) (default 1) (offset 9))
            ))))
            (exception_priority_2 "a.k.a. SHPR2" (offset 0x1C) (type (reg (bits 32) (packed
                (SVCall (type u8) (offset 24))
            ))))
            (exception_priority_3 "a.k.a. SHPR3" (type (reg (bits 32) (packed
                (PendSV (type u8) (offset 16))
                (SysTick (type u8) (offset 24))
            ))))
            (exception_control_state "a.k.a. SHCSR" (type (reg (bits 32) (packed
                (pending_SVCall "For debug use only; use SVC instruction to trigger SVCall from code." (type bool) (offset 15))
            ))))
        ))
    )
    (create-peripheral MPU
        (base 0xE000ED90)
        (type (struct
            (TYPE (type (reg r (bits 32) (packed
                (SEPARATE (type u1))
                (DREGION (type u8) (offset 8))
                (IREGION (type u8) (offset 16))
            ))))
            (CTRL (type (reg (bits 32) (packed
                (ENABLE (type u1))
                (HFNMIENA (type u1))
                (PRIVDEFENA (type u1))
            ))))
            (RNR (type (reg (bits 32) (packed
                (REGION (type u4))
            ))))
            (RBAR (type (reg (bits 32) (packed
                (REGION (type u4))
                (VALID (type u1))
                (ADDR (type u24) (offset 8))
            ))))
            (RASR (type (reg (bits 32) (packed
                (ENABLE (type u1))
                (SIZE (type u5))
                (SRD (type u8) (offset 8))
                (B (type u1))
                (C (type u1))
                (S (type u1))
                (AP (type u3) (offset 24))
                (XN (type u1) (offset 28))
            ))))
        ))
    )
)
