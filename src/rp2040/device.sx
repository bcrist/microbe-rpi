(group ""
    (peripheral PADS_* (move-to-group io))
    (peripheral IO_* (delete))
    (peripheral PIO* (move-to-group pio))
    (peripheral PWM (move-to-group pwm))
    (peripheral I2C* (move-to-group i2c))
    (peripheral SPI* (move-to-group spi))
    (peripheral UART* (move-to-group uart))
    (peripheral ADC (move-to-group adc))
    (peripheral DMA (move-to-group dma))
    (peripheral USB* (move-to-group usb))

    (peripheral SYS* (move-to-group sys))
    (peripheral SIO (move-to-group sys))
    (peripheral VREG_AND_CHIP_RESET (move-to-group sys))
    (peripheral BUSCTRL (move-to-group sys))
    (peripheral RESETS (move-to-group sys))
    (peripheral PSM (move-to-group sys))
    (peripheral WATCHDOG (move-to-group sys))
    (peripheral XIP_CTRL (move-to-group sys))
    (peripheral XIP_SSI (move-to-group sys))

    (peripheral RTC (move-to-group rtc))
    (peripheral TIMER (move-to-group timer))
    (peripheral XOSC (move-to-group clk))
    (peripheral ROSC (move-to-group clk))
    (peripheral CLOCKS (move-to-group clk))
    (peripheral PLL_* (move-to-group clk))
    (peripheral PPB (delete))
    (peripheral TBMAN (delete))
)
(group io
    (create-type DriveStrength
        (bits 2)
        (enum
            (0 2mA)
            (1 4mA)
            (2 8mA)
            (3 12mA)
        )
    )
    (create-type SlewRate
        (bits 1)
        (enum
            (0 slow)
            (1 fast)
        )
    )
    (create-type PinMaintenance
        (bits 2)
        (enum
            (0 float)
            (1 pull_down)
            (2 pull_up)
        )
    )
    (create-type ModeOverride
        (bits 2)
        (enum
            (0 normal)
            (1 invert)
            (2 force_low)
            (3 force_high)
        )
    )
    (peripheral PADS_*
        (type
            (field VOLTAGE_SELECT (rename voltage))
        )
        (reg voltage (rename VoltageSelect) (field VOLTAGE_SELECT (rename voltage)))
        (reg * 
            (field DRIVE (rename strength) (set-type DriveStrength))
            (field SLEWFAST (rename speed) (set-type SlewRate))
            (field SCHMITT (rename hysteresis) (set-type bool))
            (merge-field PDE maintenance PinMaintenance)
            (field IE (rename input_enabled) (set-type bool))
            (field OD (rename output_disabled) (set-type bool))
        )
    )
    (peripheral PADS_BANK0
        (type
            (field GPIO0 (type (inner (rename PadConfig))))
            (delete-field GPIO*)
            (create-field gpio (offset 4)
                (type (array 30 (reg PadConfig)))
            )
            (field SWCLK (rename swclk))
            (field SWD (rename swdio))
            (rename PADS)
        )
        (rename PADS)
    )
    (peripheral PADS_QSPI
        (type
            (field GPIO_QSPI_SCLK
                (rename sclk)
                (type (inner
                    (set-name "")
                    (set-fallback-name "")
                ))
            )
            (field GPIO_QSPI_SD0
                (rename sd)
                (type (inner (set-name QspiPadConfigFloat)))
                (set-type (array 4 (reg QspiPadConfigFloat)))
            )
            (delete-field GPIO_QSPI_SD*)
            (field GPIO_QSPI_SS
                (rename ss)
                (type (inner (set-name QspiPadConfigPullUp)))
            )
        )
    )
    (create-type IoStatus
        (bits 32)
        (packed
            (output_internal "Before override/inversion" (type u1) (offset 8))
            (output_pad "After override/inversion" (type u1))
            (oe_internal "Before override/inversion" (type u1) (offset 12))
            (oe_pad "After override/inversion" (type u1))
            (input_pad "Before override/inversion" (type u1) (offset 17))
            (input_internal "After override/inversion" (type u1) (offset 19))
            (irq_pad "Before override/inversion" (type u1) (offset 24))
            (irq_internal "After override/inversion" (type u1) (offset 26))
        )
    )
    (create-type IoFunction
        (bits 5)
        (inline never)
        (enum
            (0 jtag)
            (1 spi)
            (2 uart)
            (3 i2c)
            (4 pwm)
            (5 sio)
            (6 pio0)
            (7 pio1)
            (8 clock)
            (9 usb)
            (0x1f disable)
        )
    )
    (create-type QspiFunction
        (bits 5)
        (inline never)
        (enum
            (0 ssi)
            (5 sio)
            (0x1f disable)
        )
    )
    (create-type IoControl
        (bits 32)
        (packed 
            (func (type IoFunction) (default 0x1F))
            (output_override (type ModeOverride) (offset 8))
            (oe_override (type ModeOverride) (offset 12))
            (input_override (type ModeOverride) (offset 16))
            (irq_override (type ModeOverride) (offset 28))
        )
    )
    (create-type QspiControl
        (bits 32)
        (packed 
            (func (type QspiFunction) (default 0x1F))
            (output_override (type ModeOverride) (offset 8))
            (oe_override (type ModeOverride) (offset 12))
            (input_override (type ModeOverride) (offset 16))
            (irq_override (type ModeOverride) (offset 28))
        )
    )
    (create-type IoStatusControl
        (struct
            (status (type (reg IoStatus)))
            (control (type (reg IoControl)))
        )
    )
    (create-type QspiStatusControl
        (struct
            (status (type (reg IoStatus)))
            (control (type (reg QspiControl)))
        )
    )
    (create-peripheral IO
        (base 0x40014000)
        (type (array 30 IoStatusControl) (inline never))
    )
    (create-peripheral IO_QSPI
        (base 0x40018000)
        (type (struct
            (sclk (type QspiStatusControl))
            (ss (type QspiStatusControl))
            (sd (type [4]QspiStatusControl))
        ))
    )
    (create-type InterruptBitmap
        (struct
            (gpio_0_to_7 (type (reg (name InterruptBitmap0) (bits 32) (packed
                (gpio0_low)
                (gpio0_high)
                (gpio0_falling)
                (gpio0_rising)

                (gpio1_low)
                (gpio1_high)
                (gpio1_falling)
                (gpio1_rising)

                (gpio2_low)
                (gpio2_high)
                (gpio2_falling)
                (gpio2_rising)

                (gpio3_low)
                (gpio3_high)
                (gpio3_falling)
                (gpio3_rising)

                (gpio4_low)
                (gpio4_high)
                (gpio4_falling)
                (gpio4_rising)

                (gpio5_low)
                (gpio5_high)
                (gpio5_falling)
                (gpio5_rising)

                (gpio6_low)
                (gpio6_high)
                (gpio6_falling)
                (gpio6_rising)

                (gpio7_low)
                (gpio7_high)
                (gpio7_falling)
                (gpio7_rising)
            ))))
            (gpio_8_to_15 (type (reg (name InterruptBitmap1) (bits 32) (packed
                (gpio8_low)
                (gpio8_high)
                (gpio8_falling)
                (gpio8_rising)

                (gpio9_low)
                (gpio9_high)
                (gpio9_falling)
                (gpio9_rising)

                (gpio10_low)
                (gpio10_high)
                (gpio10_falling)
                (gpio10_rising)

                (gpio11_low)
                (gpio11_high)
                (gpio11_falling)
                (gpio11_rising)

                (gpio12_low)
                (gpio12_high)
                (gpio12_falling)
                (gpio12_rising)

                (gpio13_low)
                (gpio13_high)
                (gpio13_falling)
                (gpio13_rising)

                (gpio14_low)
                (gpio14_high)
                (gpio14_falling)
                (gpio14_rising)

                (gpio15_low)
                (gpio15_high)
                (gpio15_falling)
                (gpio15_rising)
            ))))
            (gpio_16_to_23 (type (reg (name InterruptBitmap2) (bits 32) (packed
                (gpio16_low)
                (gpio16_high)
                (gpio16_falling)
                (gpio16_rising)

                (gpio17_low)
                (gpio17_high)
                (gpio17_falling)
                (gpio17_rising)

                (gpio18_low)
                (gpio18_high)
                (gpio18_falling)
                (gpio18_rising)

                (gpio19_low)
                (gpio19_high)
                (gpio19_falling)
                (gpio19_rising)

                (gpio20_low)
                (gpio20_high)
                (gpio20_falling)
                (gpio20_rising)

                (gpio21_low)
                (gpio21_high)
                (gpio21_falling)
                (gpio21_rising)

                (gpio22_low)
                (gpio22_high)
                (gpio22_falling)
                (gpio22_rising)

                (gpio23_low)
                (gpio23_high)
                (gpio23_falling)
                (gpio23_rising)
            ))))
            (gpio_24_to_29 (type (reg (name InterruptBitmap3) (bits 32) (packed
                (gpio24_low)
                (gpio24_high)
                (gpio24_falling)
                (gpio24_rising)

                (gpio25_low)
                (gpio25_high)
                (gpio25_falling)
                (gpio25_rising)

                (gpio26_low)
                (gpio26_high)
                (gpio26_falling)
                (gpio26_rising)

                (gpio27_low)
                (gpio27_high)
                (gpio27_falling)
                (gpio27_rising)

                (gpio28_low)
                (gpio28_high)
                (gpio28_falling)
                (gpio28_rising)

                (gpio29_low)
                (gpio29_high)
                (gpio29_falling)
                (gpio29_rising)
            ))))
        )
    )
    (copy-type InterruptBitmap InterruptBitmapReadOnly
        (field * (type (set-access r)))
    )
    (create-type InterruptEnableForceStatus
        (struct
            (enable (type InterruptBitmap))
            (force (type InterruptBitmap))
            (status (type InterruptBitmapReadOnly))
        )
    )
    (create-peripheral IO_INT
        (base 0x400140F0)
        (type (struct
            (interrupt_status "Write 1 to clear edge interrupt flags" (type InterruptBitmap))
            (core0 (type InterruptEnableForceStatus))
            (core1 (type InterruptEnableForceStatus))
            (dormant_wake (type InterruptEnableForceStatus))
        ))
    )
    (create-type QspiInterruptBitmap
        (bits 32)
        (packed
            (sclk_low)
            (sclk_high)
            (sclk_falling)
            (sclk_rising)

            (ss_low)
            (ss_high)
            (ss_falling)
            (ss_rising)

            (sd0_low)
            (sd0_high)
            (sd0_falling)
            (sd0_rising)

            (sd1_low)
            (sd1_high)
            (sd1_falling)
            (sd1_rising)

            (sd2_low)
            (sd2_high)
            (sd2_falling)
            (sd2_rising)

            (sd3_low)
            (sd3_high)
            (sd3_falling)
            (sd3_rising)
        )
    )
    (create-type QspiInterruptEnableForceStatus
        (struct
            (enable (type (reg QspiInterruptBitmap)))
            (force (type (reg QspiInterruptBitmap)))
            (status (type (reg r QspiInterruptBitmap)))
        )
    )
    (create-peripheral IO_QSPI_INT
        (base 0x40018030)
        (type (struct
            (interrupt_status "Write 1 to clear edge interrupt flags" (type (reg QspiInterruptBitmap)))
            (core0 (type QspiInterruptEnableForceStatus))
            (core1 (type QspiInterruptEnableForceStatus))
            (dormant_wake (type QspiInterruptEnableForceStatus))
        ))
    )
)
(group pio
)
(group pwm
)
(group i2c
)
(group spi
)
(group uart
)
(group adc
)
(group dma
    (create-type ChannelBitmap
        (bits 32)
        (packed
            (channel_0 (type bool))
            (channel_1 (type bool))
            (channel_2 (type bool))
            (channel_3 (type bool))
            (channel_4 (type bool))
            (channel_5 (type bool))
            (channel_6 (type bool))
            (channel_7 (type bool))
            (channel_8 (type bool))
            (channel_9 (type bool))
            (channel_10 (type bool))
            (channel_11 (type bool))
        )
    )
    (create-type InterruptEnableForceStatus
        (struct
            (enable (type (reg ChannelBitmap)))
            (force (type (reg ChannelBitmap)))
            (status (type (reg ChannelBitmap)))
        )
    )
    (create-type Checksum
        (struct
            (control (type
                (reg (bits 32) (packed
                    (enabled (type bool))
                    (channel (type u4))
                    (algorithm (type (enum
                        (0 crc32_ieee802_3)
                        (1 crc32_ieee802_3_bitswapped)
                        (2 crc16_ccitt)
                        (3 crc16_ccitt_bitswapped)
                        (0xE parity)
                        (0xF sum32) 
                    )))
                    (byteswap "applies after the byteswap from channel config" (type bool))
                    (output_bitswapped (type bool))
                    (output_complemented (type bool))
                ))
            ))
            (data (type (reg u32)))
        )
    )
    (peripheral DMA
        (reg CH0_CTRL_TRIG
            (rename ChannelControl)
            (field EN (rename enabled))
            (field HIGH_PRIORITY
                (rename priority)
                (set-type (enum
                    (0 low)
                    (1 high)
                ))
            )
            (field DATA_SIZE
                (rename width)
                (set-type (enum
                    (0 _8_bits)
                    (1 _16_bits)
                    (2 _32_bits)
                ))
            )
            (field INCR_READ (rename increment_after_read) (set-type bool))
            (field INCR_WRITE (rename increment_after_write) (set-type bool))
            (field RING_SIZE
                (rename circular_buffer_align)
                (set-type (enum
                    (0 no_wrap)
                    (1 _2_bytes)
                    (2 _4_bytes)
                    (3 _8_bytes)
                    (4 _16_bytes)
                    (5 _32_bytes)
                    (6 _64_bytes)
                    (7 _128_bytes)
                    (8 _256_bytes)
                    (9 _512_bytes)
                    (10 _1024_bytes)
                    (11 _2048_bytes)
                    (12 _4096_bytes)
                    (13 _8192_bytes)
                    (14 _16384_bytes)
                    (15 _32768_bytes)
                ))
            )
            (field CHAIN_TO
                (rename chain_channel)
                (set-desc "Set to own channel ID to disable")
            )
            (field RING_SEL
                (rename circular_buffer_mode)
                (set-type (enum
                    (0 circular_buffer_source)
                    (1 circular_buffer_dest)
                ))
            )
            (field TREQ_SEL
                (rename handshake)
                (set-default 0x3f)
                (set-type (enum
                    (0x0 pio0_tx0)
                    (0x1 pio0_tx1)
                    (0x2 pio0_tx2)
                    (0x3 pio0_tx3)
                    (0x4 pio0_rx0)
                    (0x5 pio0_rx1)
                    (0x6 pio0_rx2)
                    (0x7 pio0_rx3)

                    (0x8 pio1_tx0)
                    (0x9 pio1_tx1)
                    (0xA pio1_tx2)
                    (0xB pio1_tx3)
                    (0xC pio1_rx0)
                    (0xD pio1_rx1)
                    (0xE pio1_rx2)
                    (0xF pio1_rx3)

                    (0x10 spi0_tx)
                    (0x11 spi0_rx)
                    (0x12 spi1_tx)
                    (0x13 spi1_rx)

                    (0x14 uart0_tx)
                    (0x15 uart0_rx)
                    (0x16 uart1_tx)
                    (0x17 uart1_rx)

                    (0x18 pwm_wrap0)
                    (0x19 pwm_wrap1)
                    (0x1A pwm_wrap2)
                    (0x1B pwm_wrap3)
                    (0x1C pwm_wrap4)
                    (0x1D pwm_wrap5)
                    (0x1E pwm_wrap6)
                    (0x1F pwm_wrap7)

                    (0x20 i2c0_tx)
                    (0x21 i2c0_rx)
                    (0x22 i2c1_tx)
                    (0x23 i2c1_rx)

                    (0x24 adc)
                    (0x25 xip_stream)
                    (0x26 xip_ssitx)
                    (0x27 xip_ssirx)

                    (0x3b pacer0)
                    (0x3c pacer1)
                    (0x3d pacer2)
                    (0x3e pacer3)

                    (0x3f none)
                ))
            )
            (field IRQ_QUIET
                (rename interrupt_mode)
                (set-type (enum
                    (0 transfer_complete)
                    (1 null_trigger)
                ))
            )
            (field BSWAP (rename byteswap) (set-type bool))
            (field SNIFF_EN (rename checksum_enabled) (set-type bool))
            (field BUSY (rename busy) (set-type bool))
            (field WRITE_ERROR
                (rename write_error_flag)
                (set-desc "write 1 to clear")
                (set-type bool)
            )
            (field READ_ERROR
                (rename read_error_flag)
                (set-desc "write 1 to clear")
                (set-type bool)
            )
            (field AHB_ERROR
                (rename bus_error_flag)
                (set-desc "logical OR or write_error_flag and read_error_flag")
                (set-type bool)
            )
        )
        (set-base 0x50000400 adjust-offsets)
        (type
            (delete-field CH#_*)
            (delete-field N_CHANNELS)
            (field INTR
                (rename interrupt_status)
                (set-type (reg ChannelBitmap))
            )
            (merge-field INTE0 irq0 InterruptEnableForceStatus)
            (merge-field INTE1 irq1 InterruptEnableForceStatus)
            (merge-field TIMER0 pacer (array 4 (reg (packed
                (divisor (type u16))
                (multiplier (type u16))
            ))))
            (field MULTI_CHAN_TRIGGER
                (rename multi_trigger)
                (set-type (reg w ChannelBitmap))
            )
            (merge-field SNIFF_CTRL checksum Checksum)
            (field FIFO_LEVELS
                (rename fifo_debug)
                (type (set-access r) (inner
                    (field TDF_LVL (rename data_fifo_level))
                    (field WAF_LVL (rename write_address_fifo_level))
                    (field RAF_LVL (rename read_address_fifo_level))
                ))
            )
            (field CHAN_ABORT
                (rename abort)
                (set-desc "N.B. erratum RP2040-E13")
                (set-type (reg w ChannelBitmap))
            )
        )
    )
    (create-type Channel
        (union
            (config (type (struct
                (read_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero const anyopaque))))
                (write_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero anyopaque))))
                (count "Writes will not take effect until the next time the channel is triggered" (type (reg u32)))
                (control (type (reg ChannelControl)) (offset 0x10))
            )))
            (trigger (type (struct
                (control (type (reg ChannelControl)) (offset 0xC))
                (count (type (reg u32)) (offset 0x1C))
                (write_ptr (type (reg (pointer allowzero anyopaque))) (offset 0x2C))
                (read_ptr (type (reg (pointer allowzero const anyopaque))) (offset 0x3C))
            )))
            (config_block (type (struct
                (control_triggered (type (struct
                    (read_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero const anyopaque))))
                    (write_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero anyopaque))))
                    (count "Writes will not take effect until the next time the channel is triggered" (type (reg u32)))
                    (control (type (reg ChannelControl)))
                )))
                (count_triggered (type (struct
                    (control (type (reg ChannelControl)))
                    (read_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero const anyopaque))))
                    (write_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero anyopaque))))
                    (count (type (reg u32)))
                )))
                (write_ptr_triggered (type (struct
                    (control (type (reg ChannelControl)))
                    (count (type (reg u32)))
                    (read_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero const anyopaque))))
                    (write_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero anyopaque))))
                )))
                (read_ptr_triggered (type (struct
                    (control (type (reg ChannelControl)))
                    (write_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero anyopaque))))
                    (count (type (reg u32)))
                    (read_ptr "N.B. erratum RP2040-E12" (type (reg (pointer allowzero const anyopaque))))
                )))
            )))
        )
    )
    (create-peripheral DMA_CH
        (base 0x50000000)
        (type (array 12 Channel) (inline never))
    )
    (create-type Debug
        (bits 512)
        (struct
            (pending "write any value to reinitialize DREQ handshaking" (type (reg
                (bits 32)
                (packed
                    (count (type u6))
                )
            )))
            (reload_count (type (reg r u32)))
        )
    )
    (create-peripheral DMA_DEBUG
        (base 0x50000800)
        (type (array 12 Debug) (inline never))
    )
)
(group usb
    (create-type EndpointType
        (bits 2)
        (enum
            (0 Control)
            (1 Isochronous)
            (2 Bulk)
            (3 Interrupt)
        )
    )
    (peripheral USBCTRL_DPRAM
        (reg EP*_IN_CONTROL (rename EP_CONTROL))
        (reg EP*_OUT_CONTROL (rename EP_CONTROL))
        (reg EP*_IN_BUFFER_CONTROL (rename EP_BUFFER_CONTROL))
        (reg EP*_OUT_BUFFER_CONTROL (rename EP_BUFFER_CONTROL))
        (type (rename BUF))
        (rename USB_BUF)
    )
    (peripheral USBCTRL_REGS
        (reg ADDR_ENDP* (set-fallback-name ADDR_ENDP))
        (reg BUFF_STATUS (rename EndpointBitmap))
        (reg BUFF_CPU_SHOULD_HANDLE (rename EndpointBitmap))
        (reg EP_ABORT* (set-fallback-name EndpointBitmap))
        (reg EP_STATUS_STALL_NAK (rename EndpointBitmap))
        (reg INT* (set-fallback-name USB_INT))
        (type (rename REGS))
        (rename USB)
    )
)
(group clk
    (peripheral XOSC
        (type
            (field CTRL
                (rename control)
                (set-type (reg (bits 32) (packed
                    (range (type u12) (default 0xAA0))
                    (enabled
                        (default 0xD1E)
                        (type (enum
                            (0xD1E disabled)
                            (0xFAB enabled)
                        ))
                    )
                )))
            )
            (field STATUS
                (rename status)
                (set-type (reg r (bits 32) (packed
                    (enabled (offset 12) (type bool))
                    (stable (offset 31) (type bool))
                )))
            )
            (field DORMANT
                (rename pause)
                (set-type (reg (bits 32) (enum
                    (0x636F6D61 shutdown_until_interrupt)
                )))
            )
            (field STARTUP
                (rename startup_delay)
                (set-type (reg (bits 32) (packed
                    (cycles_div256 (type u14) (default 0xC4))
                )))
            )
            (delete-field COUNT)
        )
    )
    (create-type RoscStageDriveStrength
        (enum
            (0 1x)
            (1 2x)
            (3 3x)
            (7 4x)
        )
    )
    (peripheral ROSC
        (type
            (field CTRL
                (rename control)
                (set-type (reg (bits 32) (packed
                    (range
                        (default 0xFA4)
                        (type (enum
                            (0xFA4 low "8 stages")
                            (0xFA5 medium "6 stages")
                            (0xFA7 high "4 stages")
                        ))
                    )
                    (enabled
                        (default 0xD1E)
                        (type (enum
                            (0xD1E disabled)
                            (0xFAB enabled)
                        ))
                    )
                )))
            )
            (field FREQA
                (rename drive0)
                (set-type (reg (bits 32) (packed
                    (stage0 (type RoscStageDriveStrength))
                    (stage1 (type RoscStageDriveStrength) (offset 4))
                    (stage2 (type RoscStageDriveStrength) (offset 8))
                    (stage3 (type RoscStageDriveStrength) (offset 12))
                    (write_enable_key (type u16) (default 0x9696) (offset 16))
                )))
            )
            (field FREQB
                (rename drive1)
                (set-type (reg (bits 32) (packed
                    (stage4 (type RoscStageDriveStrength))
                    (stage5 (type RoscStageDriveStrength) (offset 4))
                    (stage6 (type RoscStageDriveStrength) (offset 8))
                    (stage7 (type RoscStageDriveStrength) (offset 12))
                    (write_enable_key (type u16) (default 0x9696) (offset 16))
                )))
            )
            (field DORMANT
                (rename pause)
                (set-type (reg (bits 32) (enum
                    (0x636F6D61 shutdown_until_interrupt)
                )))
            )
            (field DIV
                (rename output_divisor)
                (type (inner
                    (field DIV
                        (rename divisor)
                        (set-default 0xAB0)
                        (set-type (enum
                            (0xAA0 div32)
                            (0xAA1 div1)
                            (0xAA2 div2)
                            (0xAA3 div3)
                            (0xAA4 div4)
                            (0xAA5 div5)
                            (0xAA6 div6)
                            (0xAA7 div7)
                            (0xAA8 div8)
                            (0xAA9 div9)
                            (0xAAA div10)
                            (0xAAB div11)
                            (0xAAC div12)
                            (0xAAD div13)
                            (0xAAE div14)
                            (0xAAF div15)
                            (0xAB0 div16)
                            (0xAB1 div17)
                            (0xAB2 div18)
                            (0xAB3 div19)
                            (0xAB4 div20)
                            (0xAB5 div21)
                            (0xAB6 div22)
                            (0xAB7 div23)
                            (0xAB8 div24)
                            (0xAB9 div25)
                            (0xABA div26)
                            (0xABB div27)
                            (0xABC div28)
                            (0xABD div29)
                            (0xABE div30)
                            (0xABF div31)
                        ))
                    )
                ))
            )
            (field STATUS
                (rename status)
                (type (set-access r) (inner
                    (field ENABLED (rename enabled) (set-type bool))
                    (field STABLE (rename stable) (set-type bool))
                    (field DIV_RUNNING (rename divider_running) (set-type bool))
                    (delete-field BADWRITE)
                ))
            )
            (field RANDOMBIT
                (rename random)
                (type (inner
                    (field RANDOMBIT (rename bit))
                ))
            )
            (delete-field PHASE)
            (delete-field COUNT)
        )
    )
    (peripheral PLL_* (type
        (rename PLL)
        (field CS
            (rename control_status)
            (type (inner
                (field REFDIV
                    (rename input_divisor)
                    (set-desc "1 - 31")
                )
                (field BYPASS (rename bypass) (set-type bool))
                (field LOCK (rename locked) (set-type bool))
            ))
        )
        (field PWR
            (rename power)
            (set-type (reg (bits 32) (enum
                (0x2D shutdown)
                (0x2C bypass)
                (0x0C vco_startup)
                (0x04 run)
            )))
        )
        (field FBDIV_INT
            (rename multiplier)
            (type (inner
                (field FBDIV_INT
                    (rename factor)
                    (set-desc "16 - 320")
                )
            ))
        )
        (field PRIM
            (rename output)
            (type (inner
                (field POSTDIV2
                    (rename divisor2)
                    (set-desc "1-7; should be <= POSTDIV1")
                )
                (field POSTDIV1
                    (rename divisor1)
                    (set-desc "1-7")
                )
            ))
        )
    ))
    (create-type Div123
        (bits 2)
        (inline never)
        (enum
            (1 none)
            (2 div2)
            (3 div3)
        )
    )
    (create-type GpoutClockGenerator
        (inline never)
        (bits 96)
        (struct
            (control (type (reg
                (bits 32)
                (packed
                    (source
                        (offset 5)
                        (type (enum
                            (0 pll_sys)
                            (1 gpin0)
                            (2 gpin1)
                            (3 pll_usb)
                            (4 rosc)
                            (5 xosc)
                            (6 clk_sys)
                            (7 clk_usb)
                            (8 clk_adc)
                            (9 clk_rtc)
                            (10 clk_ref)
                        ))
                    )
                    (kill (type bool) (offset 10))
                    (enabled (type bool) (offset 11))
                    (duty_cycle_correction (type bool) (offset 12))
                    (initial_phase_delay (type u2) (offset 16))
                    (nudge_phase (type bool) (offset 20))
                )
            )))
            (divisor "8 fractional bits" (type (reg u32)))
        )
    )
    (peripheral CLOCKS (type
        (merge-field CLK_GPOUT0_CTRL gpout [4]GpoutClockGenerator)
        (merge-field CLK_REF_CTRL ref (fallback-name RefClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (type (enum
                                (0 rosc)
                                (1 aux)
                                (2 xosc)
                            ))
                        )
                        (aux_source
                            (offset 5)
                            (type (enum
                                (0 pll_usb)
                                (1 gpin0)
                                (2 gpin1)
                            ))
                        )
                    )
                )))
                (divisor (type (reg (bits 32) (packed
                    (divisor
                        (offset 8)
                        (type Div123)
                        (default 1)
                    )
                ))))
                (status (type (reg r (bits 32) (packed
                    (source (default 1) (type (enum
                        (1 rosc)
                        (2 aux)
                        (4 xosc)
                    )))
                ))))
            )
        )
        (merge-field CLK_SYS_CTRL sys (fallback-name SysClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (type (enum
                                (0 clk_ref)
                                (1 aux)
                            ))
                        )
                        (aux_source
                            (offset 5)
                            (type (enum
                                (0 pll_sys)
                                (1 pll_usb)
                                (2 rosc)
                                (3 xosc)
                                (4 gpin0)
                                (5 gpin1)
                            ))
                        )
                    )
                )))
                (divisor "8 fractional bits" (type (reg u32)))
                (status (type (reg r (bits 32) (packed
                    (source (default 1) (type (enum
                        (1 clk_ref)
                        (2 aux)
                    )))
                ))))
            )
        )
        (merge-field CLK_PERI_CTRL peri (fallback-name PeriClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (offset 5)
                            (type (enum
                                (0 clk_sys)
                                (1 pll_sys)
                                (2 pll_usb)
                                (3 rosc)
                                (4 xosc)
                                (5 gpin0)
                                (6 gpin1)
                            ))
                        )
                        (kill (type bool) (offset 10))
                        (enabled (type bool) (offset 11))
                    )
                )))
            )
        )
        (merge-field CLK_USB_CTRL usb (fallback-name UsbAdcClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (offset 5)
                            (type (enum
                                (0 pll_usb)
                                (1 pll_sys)
                                (2 rosc)
                                (3 xosc)
                                (4 gpin0)
                                (5 gpin1)
                            ))
                        )
                        (kill (type bool) (offset 10))
                        (enabled (type bool) (offset 11))
                        (initial_phase_delay (type u2) (offset 16))
                        (nudge_phase (type bool) (offset 20))
                    )
                )))
                (divisor (type (reg (bits 32) (packed
                    (divisor
                        (offset 8)
                        (type Div123)
                        (default 1)
                    )
                ))))
            )
        )
        (merge-field CLK_ADC_CTRL adc (fallback-name UsbAdcClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (offset 5)
                            (type (enum
                                (0 pll_usb)
                                (1 pll_sys)
                                (2 rosc)
                                (3 xosc)
                                (4 gpin0)
                                (5 gpin1)
                            ))
                        )
                        (kill (type bool) (offset 10))
                        (enabled (type bool) (offset 11))
                        (initial_phase_delay (type u2) (offset 16))
                        (nudge_phase (type bool) (offset 20))
                    )
                )))
                (divisor (type (reg (bits 32) (packed
                    (divisor
                        (offset 8)
                        (type Div123)
                        (default 1)
                    )
                ))))
            )
        )
        (merge-field CLK_RTC_CTRL rtc (fallback-name RtcClockGenerator)
            (bits 96)
            (inline never)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (source
                            (offset 5)
                            (type (enum
                                (0 pll_usb)
                                (1 pll_sys)
                                (2 rosc)
                                (3 xosc)
                                (4 gpin0)
                                (5 gpin1)
                            ))
                        )
                        (kill (type bool) (offset 10))
                        (enabled (type bool) (offset 11))
                        (initial_phase_delay (type u2) (offset 16))
                        (nudge_phase (type bool) (offset 20))
                    )
                )))
                (divisor "8 fractional bits" (type (reg u32)))
            )
        )
        (merge-field CLK_SYS_RESUS_CTRL resus (name SysResus)
            (bits 64)
            (struct
                (control (type (reg
                    (bits 32)
                    (packed
                        (timeout (type u8) (default 0xFF))
                        (enabled (type bool))
                        (force (type bool) (offset 12))
                        (clear (type bool) (offset 16))
                    )
                )))
                (status (type (reg
                    (bits 32)
                    (packed (resuscitated (type bool)))
                )))
            )
        )
        (field WAKE_EN0
            (type (inner
                (field * (set-type bool))
                (rename EnableBitmap0)
            ))
        )
        (field WAKE_EN1
            (type (inner
                (field * (set-type bool))
                (rename EnableBitmap1)
            ))
        )
        (merge-field WAKE_EN0 wake_enable (name EnableBitmap)
            (inline always)
            (struct
                (_0 (type (reg EnableBitmap0)) (default 0xFFFFFFFF))
                (_1 (type (reg EnableBitmap1)) (default 0x7FFF))
            )
        )
        (merge-field SLEEP_EN0 sleep_enable EnableBitmap)
        (merge-field ENABLED0 enabled_status EnableBitmap)
        (field enabled_status (type
            (rename "")
            (field * (type (set-access r)))
        ))
        (field INTR
            (rename interrupt_status)
            (type (set-access r) (inner
                (field * (set-type bool))
                (rename InterruptBitmap)
                (field CLK_SYS_RESUS (rename resus))
            ))
        )
        (merge-field INTE irq (struct
            (enable (type (reg InterruptBitmap)))
            (force (type (reg InterruptBitmap)))
            (status (type (reg r InterruptBitmap)))
        ))
        (set-name _CLOCKS)
    ))
    (create-peripheral FREQ_COUNTER (base 0x40008000) (type _CLOCKS))
    (peripheral FREQ_COUNTER
        (type
            (rename "")
            (set-fallback-name FREQ_COUNTER)
            (delete-field wake_enable*)
            (delete-field sleep_enable*)
            (delete-field enabled_status*)
            (delete-field i*)
        )
        (set-base 0x40008080 adjust-offsets)
    )
    (peripheral CLOCKS (type
        (rename "")
        (delete-field FC0_*)
        (rename CLOCKS)
    ))
    (peripheral FREQ_COUNTER (type
        (field FC0_REF_KHZ (rename ref_freq))
        (field FC0_MIN_KHZ (rename min_freq))
        (field FC0_MAX_KHZ (rename max_freq))
        (field FC0_DELAY (rename delay))
        (field FC0_INTERVAL (rename interval))
        (field FC0_SRC (rename source))
        (field FC0_STATUS (rename status))
        (field FC0_RESULT (rename result))
        (-- TODO rename packed fields)
    ))
)
(group timer
    (create-type AlarmBitmap
        (bits 32)
        (packed
            (alarm0 (type bool))
            (alarm1 (type bool))
            (alarm2 (type bool))
            (alarm3 (type bool))
        )
    )
    (peripheral TIMER
        (type
            (merge-field TIMEHW write_tick (struct
                (high (type (reg w u32)))
                (low (type (reg w u32)))
            ))
            (merge-field TIMEHR read_tick (struct
                (high "read low first to latch" (type (reg r u32)))
                (low "high is latched when read" (type (reg r u32)))
            ))
            (merge-field ALARM0 alarm_tick (array 4 (reg u32)))
            (field ARMED
                (rename alarm)
                (set-type (union
                    (pending (type (reg r AlarmBitmap)))
                    (cancel (type (reg w AlarmBitmap)))
                ))
            )
            (merge-field TIMERAWH read_tick_unlatched (struct
                (high (type (reg r u32)))
                (low (type (reg r u32)))
            ))
            (field DBGPAUSE
                (rename debug)
                (type (inner
                    (field DBG0 (rename pause_when_core0_halted) (set-type bool))
                    (field DBG1 (rename pause_when_core1_halted) (set-type bool))
                ))
            )
            (field PAUSE
                (rename control)
                (type (inner
                    (field PAUSE (rename pause) (set-type bool))
                ))
            )
            (field INTR (rename interrupt_status) (set-type (reg AlarmBitmap)))
            (merge-field INTE irq (struct
                (enable (type (reg AlarmBitmap)))
                (force (type (reg AlarmBitmap)))
                (status (type (reg r AlarmBitmap)))
            ))
        )
    )
)
(group sys
    (peripheral RESETS (type
        (field RESET_DONE
            (rename done)
            (type (inner (set-name ResetBitmap)))
        )
        (field WDSEL
            (rename watchdog)
            (type (inner (set-name ResetBitmap)))
        )
        (field RESET
            (rename force)
            (set-type (reg ResetBitmap))
        )
    ))
    (create-type ValueSetClearToggle
        (struct
            (value (type (reg u32)))
            (set (type (reg w u32)))
            (clear (type (reg w u32)))
            (toggle (type (reg w u32)))
        )
    )
    (create-type InterpolatorControlLane0
        (bits 32)
        (packed
            (shift (type u5))
            (mask_lsb (type u5))
            (mask_msb (type u5))
            (signed (type bool))
            (cross_input (type bool))
            (cross_result (type bool))
            (add_raw (type bool))
            (force_msb (type u2))
            (blend "only for interpolator 0" (type bool))
            (overflow0 (type bool) (offset 17))
            (overflow1 (type bool))
            (overflow (type bool))
        )
    )
    (create-type InterpolatorControlLane1
        (bits 32)
        (packed
            (shift (type u5))
            (mask_lsb (type u5))
            (mask_msb (type u5))
            (signed (type bool))
            (cross_input (type bool))
            (cross_result (type bool))
            (add_raw (type bool))
            (force_msb (type u2))
        )
    )
    (peripheral SIO
        (type
            (field CPUID (rename core_id))
            (merge-field GPIO_IN io (struct
                (in (type (reg r u32)))
                (in_qspi (type (reg r u32)))
                (out (type ValueSetClearToggle) (offset 0xC))
                (oe (type ValueSetClearToggle))
                (out_qspi (type ValueSetClearToggle))
                (oe_qspi (type ValueSetClearToggle))
            ))
            (merge-field FIFO_ST fifo (struct
                (status (type (reg (bits 32) (packed
                    (readable "inbox can be read at least once" (type bool))
                    (writable "outbox can be written at least once" (type bool))
                    (write_error_flag "was written when full; write to clear" (type bool))
                    (read_error_flag "was read when empty; write to clear" (type bool))
                ))))
                (outbox (type (reg w u32)))
                (inbox (type (reg r u32)))
            ))
            (field SPINLOCK_ST (rename spinlock_status))
            (merge-field DIV_UDIVIDEND divider (struct
                (unsigned_dividend (type (reg u32)))
                (unsigned_divisor (type (reg u32)))
                (signed_dividend (type (reg i32)))
                (signed_divisor (type (reg i32)))
                (quotient (type (reg r u32)))
                (remainder (type (reg r u32)))
                (control_status (type (reg r (bits 32) (packed
                    (ready (type bool))
                    (dirty (type bool))
                ))))
            ))
            (merge-field INTERP0_ACCUM0 interpolator (array 2 (struct
                (accumulator (type (array 2 (reg u32))))
                (base (type (array 3 (reg u32))))
                (pop_lane0 (type (reg r u32)))
                (pop_lane1 (type (reg r u32)))
                (pop_full (type (reg r u32)))
                (peek_lane0 (type (reg r u32)))
                (peek_lane1 (type (reg r u32)))
                (peek_full (type (reg r u32)))
                (control_lane0 (type (reg InterpolatorControlLane0)))
                (control_lane1 (type (reg InterpolatorControlLane1)))
                (accumulator_add (type (array 2 (reg (bits 32) (packed
                    (value (type u24))
                )))))
                (base_split_write (type (reg w (packed
                    (base0 (type i16))
                    (base1 (type i16))
                ))))
            )))
            (merge-field SPINLOCK0 spinlock (array 32 (reg u32)))
        )
    )
    (peripheral WATCHDOG
        (type
            (field CTRL
                (rename control)
                (type (inner
                    (field TIME (rename ticks_remaining_x2))
                    (field PAUSE_JTAG (rename pause_during_jtag) (set-type bool))
                    (field PAUSE_DBG0 (rename pause_when_core0_debugging) (set-type bool))
                    (field PAUSE_DBG1 (rename pause_when_core1_debugging) (set-type bool))
                    (field ENABLE (rename enable_countdown) (set-type bool))
                    (field TRIGGER (rename trigger_immediately) (set-type bool))
                ))
            )
            (field LOAD
                (rename reload)
                (type (inner
                    (field LOAD (rename ticks_x2))
                ))
            )
            (field REASON
                (rename last_reset_reason)
                (type (inner
                    (merge-field TIMER reason (enum
                        (0 chip_reset)
                        (1 watchdog_timeout)
                        (2 watchdog_forced)
                    ))
                ))
            )
            (merge-field SCRATCH0 scratch (array 8 (reg u32)))
            (field TICK
                (rename tick)
                (type (inner
                    (field CYCLES (rename divisor))
                    (field ENABLE (rename enabled) (set-type bool))
                    (field RUNNING (rename running) (set-type bool))
                    (field COUNT (rename current_count))
                ))
            )
        )
    )
    (peripheral XIP_SSI
        (type
            (field CTRLR0
                (rename control_0)
                (type (inner
                    (delete-field DFS)
                    (field FRF
                        (rename frame_format)
                        (set-type (enum
                            (0 spi)
                            (1 ssp)
                            (2 microwire)
                        ))
                    )
                    (field SCPH
                        (rename clock_phase)
                    )
                    (field SCPOL
                        (rename clock_polarity)
                    )
                    (field TMOD
                        (rename transfer_mode)
                        (set-type (enum
                            (0 tx_and_rx)
                            (1 tx_only "not for SPI_frame_format == .standard")
                            (2 rx_only "not for SPI_frame_format == .standard")
                            (3 eeprom_read "tx then rx")
                        ))
                    )
                    (field SLV_OE
                        (rename slave_output_enable)
                    )
                    (field SRL
                        (set-desc "test mode")
                        (rename shift_register_loop)
                    )
                    (field CFS
                        (rename control_frame_size)
                        (set-type (enum
                            (0 _1_bit)
                            (1 _2_bits)
                            (2 _3_bits)
                            (3 _4_bits)
                            (4 _5_bits)
                            (5 _6_bits)
                            (6 _7_bits)
                            (7 _8_bits)
                            (8 _9_bits)
                            (9 _10_bits)
                            (10 _11_bits)
                            (11 _12_bits)
                            (12 _13_bits)
                            (13 _14_bits)
                            (14 _15_bits)
                            (15 _16_bits)
                        ))
                    )
                    (field DFS_32
                        (rename data_frame_size)
                        (set-type (enum
                            (0 _1_bit)
                            (1 _2_bits)
                            (2 _3_bits)
                            (3 _4_bits)
                            (4 _5_bits)
                            (5 _6_bits)
                            (6 _7_bits)
                            (7 _8_bits)
                            (8 _9_bits)
                            (9 _10_bits)
                            (10 _11_bits)
                            (11 _12_bits)
                            (12 _13_bits)
                            (13 _14_bits)
                            (14 _15_bits)
                            (15 _16_bits)
                            (16 _17_bits)
                            (17 _18_bits)
                            (18 _19_bits)
                            (19 _20_bits)
                            (20 _21_bits)
                            (21 _22_bits)
                            (22 _23_bits)
                            (23 _24_bits)
                            (24 _25_bits)
                            (25 _26_bits)
                            (26 _27_bits)
                            (27 _28_bits)
                            (28 _29_bits)
                            (29 _30_bits)
                            (30 _31_bits)
                            (31 _32_bits)
                        ))
                    )
                    (field SPI_FRF
                        (rename spi_frame_format)
                        (set-desc "Only valid when frame_format is .spi")
                        (set-type (enum
                            (0 standard)
                            (1 dual)
                            (2 quad)
                        ))
                    )
                    (field SSTE
                        (rename slave_select_toggle_enable)
                    )
                ))
            )
            (field CTRLR1
                (rename control_1)
                (type (inner
                    (field NDF
                        (rename num_data_frames)
                        (set-desc "N+1 data frames will be transferred")
                    )
                ))
            )
            (field SSIENR
                (rename enable)
                (type (inner
                    (field SSI_EN (rename enable) (set-type bool))
                ))
            )
            (field BAUDR
                (rename baud_rate)
                (type (inner
                    (field SCKDV (rename clock_divisor) (set-desc "LSB must be 0"))
                ))
            )
            (field RX_SAMPLE_DLY
                (rename rx_sample_delay)
                (type (inner
                    (field RSD (rename delay))
                ))
            )
            (field SR
                (rename status)
                (type (set-access r) (inner
                    (field BUSY (rename busy) (set-type bool))
                    (field TFNF (rename tx_fifo_not_full) (set-type bool))
                    (field TFE (rename tx_fifo_empty) (set-type bool))
                    (field RFNE (rename rx_fifo_not_empty) (set-type bool))
                    (field RFF (rename rx_fifo_full) (set-type bool))
                    (field TXE (rename tx_error_flag) (set-type bool))
                    (field DCOL (rename data_collision_error_flag) (set-type bool))
                ))
            )
            (field DR0
                (rename data)
                (set-type (array 36 (reg u32)))
            )
            (field SPI_CTRLR0
                (rename spi_control)
                (type (inner
                    (field TRANS_TYPE
                        (rename transfer_format)
                        (set-type (enum
                            (0 standard_command_standard_address)
                            (1 standard_command_wide_address)
                            (2 wide_command_wide_address)
                        ))
                    )
                    (field ADDR_L
                        (rename address_length)
                        (set-type (enum
                            (0 none)
                            (1 _4_bits)
                            (2 _8_bits)
                            (3 _12_bits)
                            (4 _16_bits)
                            (5 _20_bits)
                            (6 _24_bits)
                            (7 _28_bits)
                            (8 _32_bits)
                            (9 _36_bits)
                            (10 _40_bits)
                            (11 _44_bits)
                            (12 _48_bits)
                            (13 _52_bits)
                            (14 _56_bits)
                            (15 _60_bits)
                        ))
                    )
                    (field INST_L
                        (rename command_length)
                        (set-type (enum
                            (0 none)
                            (1 _4_bits)
                            (2 _8_bits)
                            (3 _16_bits)
                        ))
                    )
                    (field WAIT_CYCLES
                        (rename wait_cycles_after_mode)
                    )
                    (field SPI_DDR_EN
                        (rename ddr_address_and_data)
                        (set-type bool)
                    )
                    (field INST_DDR_EN
                        (rename ddr_command)
                        (set-type bool)
                    )
                    (field SPI_RXDS_EN
                        (rename enable_read_data_strobe)
                        (set-type bool)
                    )
                    (field XIP_CMD
                        (rename xip_command_or_mode)
                        (set-desc "When command_length is 8 bits, this command is sent for each XIP transfer.\\nWhen command_length is 0, it is appended to the address.")
                    )
                ))
            )
            (rename SSI)
        )
        (rename SSI)
    )
    (peripheral SYSINFO
        (type
            (field CHIP_ID (rename chip_id)
                (type (inner
                    (field MANUFACTURER (rename mfr))
                    (field PART (rename part))
                    (field REVISION (rename revision))
                ))
            )
            (delete-field PLATFORM)
            (field GITREF_RP2040 (rename git_revision))
        )
    )
)
(group cortex
    (create-peripheral SYSTICK
        (base 0xE000E010)
        (type (struct
            (control_status (type (reg (bits 32) (packed
                (count_enable (type bool))
                (overflow_interrupt_enable
                    "Note the interrupt is triggered even if overflow_flag has not been cleared since the last overflow"
                    (type bool)
                )
                (clock_source (type (enum
                    (0 watchdog_tick)
                    (1 clk_sys)
                )))
                (overflow_flag "Read-only; resets to 0 when read" (type bool) (offset 16))
            ))))
            (reload_value (type (reg (bits 32) (packed
                (value (type u24))
            ))))
            (current_value (type (reg (bits 32) (packed
                (value (type u24))
            ))))
            (calibration (type (reg r (bits 32) (packed
                (ten_ms_count (type u24))
                (calibration_inexact (type bool) (offset 30))
                (no_ref_clock (type bool) (offset 31))
            ))))
        ))
    )
    (create-type Exception
        (bits 9)
        (ext chip "@enumFromInt(")
    )
    (create-peripheral SCB
        (base 0xE000ED00)
        (type (struct
            (chip_id "a.k.a. CPUID" (type (reg r (bits 32) (packed
                (revision (type u4) (default 1))
                (part_num (type u12) (default 0xC60))
                (architecture (type u4) (default 0xC))
                (variant (type u4))
                (implementer (type u8) (default 0x41))
            ))))
            (interrupt_control_state "a.k.a. ICSR" (type (reg (bits 32) (packed
                (active_exception_number (type Exception))
                (pending_exception_number (type Exception) (offset 12))
                (interrupt_pending "Only includes external interrupts (i.e. exception number >= 16)" (type bool) (offset 22))
                (isr_preempt "Only available when core is halted" (type bool))
                (clear_pending_SysTick (type bool) (offset 25))
                (set_pending_SysTick "reads true if SysTick is pending" (type bool))
                (clear_pending_PendSV (type bool))
                (set_pending_PendSV "reads true if PendSV is pending" (type bool))
                (set_pending_NMI "reads true if NMI is pending" (type bool) (offset 31))
            ))))
            (vector_table "N.B. The vector table must be align(256)!\\na.k.a. VTOR"
                (type (reg (pointer allowzero const (name VectorTable) (ext vt.zig))))
            )
            (reset_control "a.k.a. AIRCR" (type (reg (bits 32) (packed
                (request_clear_active_exception "Only available when core is halted" (type bool) (offset 1))
                (request_core_reset (type bool))
                (endianness 
                    (offset 15)
                    (type (enum
                        (0 little)
                        (1 big)
                    ))
                )
                (write_enable_key (type u16) (default 0x05FA))
            ))))
            (system_control "a.k.a. SCR" (type (reg (bits 32) (packed
                (sleep_on_exception_exit (type bool) (offset 1))
                (deep_sleep_enable (type bool))
                (send_event_on_pending_interrupt (type bool) (offset 4))
            ))))
            (configuration "a.k.a. CCR" (type (reg r (bits 32) (packed
                (unaligned_access_is_HardFault (type bool) (default 1) (offset 3))
                (exception_stack_align_8 (type bool) (default 1) (offset 9))
            ))))
            (exception_priority_2 "a.k.a. SHPR2" (offset 0x1C) (type (reg (bits 32) (packed
                (SVCall (type u8) (offset 24))
            ))))
            (exception_priority_3 "a.k.a. SHPR3" (type (reg (bits 32) (packed
                (PendSV (type u8) (offset 16))
                (SysTick (type u8) (offset 24))
            ))))
            (exception_control_state "a.k.a. SHCSR" (type (reg (bits 32) (packed
                (pending_SVCall "For debug use only; use SVC instruction to trigger SVCall from code." (type bool) (offset 15))
            ))))
        ))
    )
    (create-peripheral MPU
        (base 0xE000ED90)
        (type (struct
            (TYPE (type (reg r (bits 32) (packed
                (SEPARATE (type u1))
                (DREGION (type u8) (offset 8))
                (IREGION (type u8) (offset 16))
            ))))
            (CTRL (type (reg (bits 32) (packed
                (ENABLE (type u1))
                (HFNMIENA (type u1))
                (PRIVDEFENA (type u1))
            ))))
            (RNR (type (reg (bits 32) (packed
                (REGION (type u4))
            ))))
            (RBAR (type (reg (bits 32) (packed
                (REGION (type u4))
                (VALID (type u1))
                (ADDR (type u24) (offset 8))
            ))))
            (RASR (type (reg (bits 32) (packed
                (ENABLE (type u1))
                (SIZE (type u5))
                (SRD (type u8) (offset 8))
                (B (type u1))
                (C (type u1))
                (S (type u1))
                (AP (type u3) (offset 24))
                (XN (type u1) (offset 28))
            ))))
        ))
    )
)
