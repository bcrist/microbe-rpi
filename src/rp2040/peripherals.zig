// Generated by https://github.com/bcrist/microbe-regz
const types = @import("reg_types.zig");

pub const ADC = @as(*volatile types.adc.ADC, @ptrFromInt(0x4004C000));
pub const CLOCKS = @as(*volatile types.clk.CLOCKS, @ptrFromInt(0x40008000));
pub const PLL_SYS = @as(*volatile types.clk.PLL, @ptrFromInt(0x40028000));
pub const PLL_USB = @as(*volatile types.clk.PLL, @ptrFromInt(0x4002C000));
pub const ROSC = @as(*volatile types.clk.ROSC, @ptrFromInt(0x40060000));
pub const RTC = @as(*volatile types.clk.RTC, @ptrFromInt(0x4005C000));
pub const TIMER = @as(*volatile types.clk.TIMER, @ptrFromInt(0x40054000));
pub const XOSC = @as(*volatile types.clk.XOSC, @ptrFromInt(0x40024000));
pub const MPU = @as(*volatile types.cortex.MPU, @ptrFromInt(0xE000ED90));
pub const NVIC = @as(*volatile types.cortex.NVIC, @ptrFromInt(0xE000E100));
pub const SCB = @as(*volatile types.cortex.SCB, @ptrFromInt(0xE000ED00));
pub const SYSTICK = @as(*volatile types.cortex.SYSTICK, @ptrFromInt(0xE000E010));
pub const DMA = @as(*volatile types.dma.DMA, @ptrFromInt(0x50000000));
pub const I2C0 = @as(*volatile types.i2c.I2C, @ptrFromInt(0x40044000));
pub const I2C1 = @as(*volatile types.i2c.I2C, @ptrFromInt(0x40048000));
pub const IO_BANK0 = @as(*volatile types.io.IO_BANK0, @ptrFromInt(0x40014000));
pub const IO_QSPI = @as(*volatile types.io.IO_QSPI, @ptrFromInt(0x40018000));
pub const PADS = @as(*volatile types.io.PADS_BANK0, @ptrFromInt(0x4001C000));
pub const PADS_QSPI = @as(*volatile types.io.PADS_QSPI, @ptrFromInt(0x40020000));
pub const PIO0 = @as(*volatile types.pio.PIO, @ptrFromInt(0x50200000));
pub const PIO1 = @as(*volatile types.pio.PIO, @ptrFromInt(0x50300000));
pub const PWM = @as(*volatile types.pwm.PWM, @ptrFromInt(0x40050000));
pub const SPI0 = @as(*volatile types.spi.SPI, @ptrFromInt(0x4003C000));
pub const SPI1 = @as(*volatile types.spi.SPI, @ptrFromInt(0x40040000));
pub const BUSCTRL = @as(*volatile types.sys.BUSCTRL, @ptrFromInt(0x40030000));
pub const PSM = @as(*volatile types.sys.PSM, @ptrFromInt(0x40010000));
pub const RESETS = @as(*volatile types.sys.RESETS, @ptrFromInt(0x4000C000));
pub const SIO = @as(*volatile types.sys.SIO, @ptrFromInt(0xD0000000));
pub const SSI = @as(*volatile types.sys.SSI, @ptrFromInt(0x18000000));
pub const SYSCFG = @as(*volatile types.sys.SYSCFG, @ptrFromInt(0x40004000));
pub const SYSINFO = @as(*volatile types.sys.SYSINFO, @ptrFromInt(0x40000000));
pub const VREG_AND_CHIP_RESET = @as(*volatile types.sys.VREG_AND_CHIP_RESET, @ptrFromInt(0x40064000));
pub const WATCHDOG = @as(*volatile types.sys.WATCHDOG, @ptrFromInt(0x40058000));
pub const XIP_CTRL = @as(*volatile types.sys.XIP_CTRL, @ptrFromInt(0x14000000));
pub const UART0 = @as(*volatile types.uart.UART, @ptrFromInt(0x40034000));
pub const UART1 = @as(*volatile types.uart.UART, @ptrFromInt(0x40038000));
pub const USB = @as(*volatile types.usb.REGS, @ptrFromInt(0x50110000));
pub const USB_BUF = @as(*volatile types.usb.BUF, @ptrFromInt(0x50100000));
