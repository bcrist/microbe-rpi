// Generated by https://github.com/bcrist/microbe-regz
const Mmio = @import("microbe").Mmio;

pub const DriveStrength = enum(u2) {
    @"2mA" = 0,
    @"4mA" = 1,
    @"8mA" = 2,
    @"12mA" = 3,
};

pub const SlewRate = enum(u1) {
    slow = 0,
    fast = 1,
};

pub const PinMaintenance = enum(u2) {
    float = 0,
    pull_down = 1,
    pull_up = 2,
    _,
};

pub const ModeOverride = enum(u2) {
    normal = 0,
    invert = 1,
    force_low = 2,
    force_high = 3,
};

pub const VoltageSelect = packed struct(u32) {
    Voltage: enum(u1) {
        @"3v3" = 0,
        @"1v8" = 1,
    } = .@"3v3",
    _reserved_1: u31 = 0,
};

pub const PadConfigFloat = packed struct(u32) {
    speed: SlewRate = .slow,
    hysteresis: bool = true,
    maintenance: PinMaintenance = .float,
    strength: DriveStrength = .@"4mA",
    input_enabled: bool = true,
    output_disabled: bool = false,
    _reserved_8: u24 = 0,
};

pub const PadConfigPullUp = packed struct(u32) {
    speed: SlewRate = .slow,
    hysteresis: bool = true,
    maintenance: PinMaintenance = .pull_up,
    strength: DriveStrength = .@"4mA",
    input_enabled: bool = true,
    output_disabled: bool = false,
    _reserved_8: u24 = 0,
};

pub const PadConfig = packed struct(u32) {
    speed: SlewRate = .slow,
    hysteresis: bool = true,
    maintenance: PinMaintenance = .pull_down,
    strength: DriveStrength = .@"4mA",
    input_enabled: bool = true,
    output_disabled: bool = false,
    _reserved_8: u24 = 0,
};

pub const PADS_QSPI = extern struct {
    voltage: Mmio(VoltageSelect, .rw),
    GPIO_QSPI_SCLK: Mmio(PadConfig, .rw),
    GPIO_QSPI_SD0: Mmio(PadConfigFloat, .rw),
    GPIO_QSPI_SD1: Mmio(PadConfigFloat, .rw),
    GPIO_QSPI_SD2: Mmio(PadConfigFloat, .rw),
    GPIO_QSPI_SD3: Mmio(PadConfigFloat, .rw),
    GPIO_QSPI_SS: Mmio(PadConfigPullUp, .rw),
};

pub const PADS_BANK0 = extern struct {
    voltage: Mmio(VoltageSelect, .rw),
    GPIO0: Mmio(PadConfig, .rw),
    GPIO1: Mmio(PadConfig, .rw),
    GPIO2: Mmio(PadConfig, .rw),
    GPIO3: Mmio(PadConfig, .rw),
    GPIO4: Mmio(PadConfig, .rw),
    GPIO5: Mmio(PadConfig, .rw),
    GPIO6: Mmio(PadConfig, .rw),
    GPIO7: Mmio(PadConfig, .rw),
    GPIO8: Mmio(PadConfig, .rw),
    GPIO9: Mmio(PadConfig, .rw),
    GPIO10: Mmio(PadConfig, .rw),
    GPIO11: Mmio(PadConfig, .rw),
    GPIO12: Mmio(PadConfig, .rw),
    GPIO13: Mmio(PadConfig, .rw),
    GPIO14: Mmio(PadConfig, .rw),
    GPIO15: Mmio(PadConfig, .rw),
    GPIO16: Mmio(PadConfig, .rw),
    GPIO17: Mmio(PadConfig, .rw),
    GPIO18: Mmio(PadConfig, .rw),
    GPIO19: Mmio(PadConfig, .rw),
    GPIO20: Mmio(PadConfig, .rw),
    GPIO21: Mmio(PadConfig, .rw),
    GPIO22: Mmio(PadConfig, .rw),
    GPIO23: Mmio(PadConfig, .rw),
    GPIO24: Mmio(PadConfig, .rw),
    GPIO25: Mmio(PadConfig, .rw),
    GPIO26: Mmio(PadConfig, .rw),
    GPIO27: Mmio(PadConfig, .rw),
    GPIO28: Mmio(PadConfig, .rw),
    GPIO29: Mmio(PadConfig, .rw),
    SWCLK: Mmio(packed struct(u32) {
        speed: SlewRate = .slow,
        hysteresis: bool = true,
        maintenance: PinMaintenance = .pull_up,
        strength: DriveStrength = .@"4mA",
        input_enabled: bool = true,
        output_disabled: bool = true,
        _reserved_8: u24 = 0,
    }, .rw),
    SWD: Mmio(PadConfigPullUp, .rw),
};

pub const QspiInterruptBitmap = packed struct(u32) {
    GPIO_QSPI_SCLK_LEVEL_LOW: bool = false,
    GPIO_QSPI_SCLK_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SCLK_EDGE_LOW: bool = false,
    GPIO_QSPI_SCLK_EDGE_HIGH: bool = false,
    GPIO_QSPI_SS_LEVEL_LOW: bool = false,
    GPIO_QSPI_SS_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SS_EDGE_LOW: bool = false,
    GPIO_QSPI_SS_EDGE_HIGH: bool = false,
    GPIO_QSPI_SD0_LEVEL_LOW: bool = false,
    GPIO_QSPI_SD0_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SD0_EDGE_LOW: bool = false,
    GPIO_QSPI_SD0_EDGE_HIGH: bool = false,
    GPIO_QSPI_SD1_LEVEL_LOW: bool = false,
    GPIO_QSPI_SD1_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SD1_EDGE_LOW: bool = false,
    GPIO_QSPI_SD1_EDGE_HIGH: bool = false,
    GPIO_QSPI_SD2_LEVEL_LOW: bool = false,
    GPIO_QSPI_SD2_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SD2_EDGE_LOW: bool = false,
    GPIO_QSPI_SD2_EDGE_HIGH: bool = false,
    GPIO_QSPI_SD3_LEVEL_LOW: bool = false,
    GPIO_QSPI_SD3_LEVEL_HIGH: bool = false,
    GPIO_QSPI_SD3_EDGE_LOW: bool = false,
    GPIO_QSPI_SD3_EDGE_HIGH: bool = false,
    _reserved_18: u8 = 0,
};

pub const GpioInterruptBitmap3 = packed struct(u32) {
    GPIO24_LEVEL_LOW: bool = false,
    GPIO24_LEVEL_HIGH: bool = false,
    GPIO24_EDGE_LOW: bool = false,
    GPIO24_EDGE_HIGH: bool = false,
    GPIO25_LEVEL_LOW: bool = false,
    GPIO25_LEVEL_HIGH: bool = false,
    GPIO25_EDGE_LOW: bool = false,
    GPIO25_EDGE_HIGH: bool = false,
    GPIO26_LEVEL_LOW: bool = false,
    GPIO26_LEVEL_HIGH: bool = false,
    GPIO26_EDGE_LOW: bool = false,
    GPIO26_EDGE_HIGH: bool = false,
    GPIO27_LEVEL_LOW: bool = false,
    GPIO27_LEVEL_HIGH: bool = false,
    GPIO27_EDGE_LOW: bool = false,
    GPIO27_EDGE_HIGH: bool = false,
    GPIO28_LEVEL_LOW: bool = false,
    GPIO28_LEVEL_HIGH: bool = false,
    GPIO28_EDGE_LOW: bool = false,
    GPIO28_EDGE_HIGH: bool = false,
    GPIO29_LEVEL_LOW: bool = false,
    GPIO29_LEVEL_HIGH: bool = false,
    GPIO29_EDGE_LOW: bool = false,
    GPIO29_EDGE_HIGH: bool = false,
    _reserved_18: u8 = 0,
};

pub const GpioInterruptBitmap2 = packed struct(u32) {
    GPIO16_LEVEL_LOW: bool = false,
    GPIO16_LEVEL_HIGH: bool = false,
    GPIO16_EDGE_LOW: bool = false,
    GPIO16_EDGE_HIGH: bool = false,
    GPIO17_LEVEL_LOW: bool = false,
    GPIO17_LEVEL_HIGH: bool = false,
    GPIO17_EDGE_LOW: bool = false,
    GPIO17_EDGE_HIGH: bool = false,
    GPIO18_LEVEL_LOW: bool = false,
    GPIO18_LEVEL_HIGH: bool = false,
    GPIO18_EDGE_LOW: bool = false,
    GPIO18_EDGE_HIGH: bool = false,
    GPIO19_LEVEL_LOW: bool = false,
    GPIO19_LEVEL_HIGH: bool = false,
    GPIO19_EDGE_LOW: bool = false,
    GPIO19_EDGE_HIGH: bool = false,
    GPIO20_LEVEL_LOW: bool = false,
    GPIO20_LEVEL_HIGH: bool = false,
    GPIO20_EDGE_LOW: bool = false,
    GPIO20_EDGE_HIGH: bool = false,
    GPIO21_LEVEL_LOW: bool = false,
    GPIO21_LEVEL_HIGH: bool = false,
    GPIO21_EDGE_LOW: bool = false,
    GPIO21_EDGE_HIGH: bool = false,
    GPIO22_LEVEL_LOW: bool = false,
    GPIO22_LEVEL_HIGH: bool = false,
    GPIO22_EDGE_LOW: bool = false,
    GPIO22_EDGE_HIGH: bool = false,
    GPIO23_LEVEL_LOW: bool = false,
    GPIO23_LEVEL_HIGH: bool = false,
    GPIO23_EDGE_LOW: bool = false,
    GPIO23_EDGE_HIGH: bool = false,
};

pub const GpioInterruptBitmap1 = packed struct(u32) {
    GPIO8_LEVEL_LOW: bool = false,
    GPIO8_LEVEL_HIGH: bool = false,
    GPIO8_EDGE_LOW: bool = false,
    GPIO8_EDGE_HIGH: bool = false,
    GPIO9_LEVEL_LOW: bool = false,
    GPIO9_LEVEL_HIGH: bool = false,
    GPIO9_EDGE_LOW: bool = false,
    GPIO9_EDGE_HIGH: bool = false,
    GPIO10_LEVEL_LOW: bool = false,
    GPIO10_LEVEL_HIGH: bool = false,
    GPIO10_EDGE_LOW: bool = false,
    GPIO10_EDGE_HIGH: bool = false,
    GPIO11_LEVEL_LOW: bool = false,
    GPIO11_LEVEL_HIGH: bool = false,
    GPIO11_EDGE_LOW: bool = false,
    GPIO11_EDGE_HIGH: bool = false,
    GPIO12_LEVEL_LOW: bool = false,
    GPIO12_LEVEL_HIGH: bool = false,
    GPIO12_EDGE_LOW: bool = false,
    GPIO12_EDGE_HIGH: bool = false,
    GPIO13_LEVEL_LOW: bool = false,
    GPIO13_LEVEL_HIGH: bool = false,
    GPIO13_EDGE_LOW: bool = false,
    GPIO13_EDGE_HIGH: bool = false,
    GPIO14_LEVEL_LOW: bool = false,
    GPIO14_LEVEL_HIGH: bool = false,
    GPIO14_EDGE_LOW: bool = false,
    GPIO14_EDGE_HIGH: bool = false,
    GPIO15_LEVEL_LOW: bool = false,
    GPIO15_LEVEL_HIGH: bool = false,
    GPIO15_EDGE_LOW: bool = false,
    GPIO15_EDGE_HIGH: bool = false,
};

pub const GpioInterruptBitmap0 = packed struct(u32) {
    GPIO0_LEVEL_LOW: bool = false,
    GPIO0_LEVEL_HIGH: bool = false,
    GPIO0_EDGE_LOW: bool = false,
    GPIO0_EDGE_HIGH: bool = false,
    GPIO1_LEVEL_LOW: bool = false,
    GPIO1_LEVEL_HIGH: bool = false,
    GPIO1_EDGE_LOW: bool = false,
    GPIO1_EDGE_HIGH: bool = false,
    GPIO2_LEVEL_LOW: bool = false,
    GPIO2_LEVEL_HIGH: bool = false,
    GPIO2_EDGE_LOW: bool = false,
    GPIO2_EDGE_HIGH: bool = false,
    GPIO3_LEVEL_LOW: bool = false,
    GPIO3_LEVEL_HIGH: bool = false,
    GPIO3_EDGE_LOW: bool = false,
    GPIO3_EDGE_HIGH: bool = false,
    GPIO4_LEVEL_LOW: bool = false,
    GPIO4_LEVEL_HIGH: bool = false,
    GPIO4_EDGE_LOW: bool = false,
    GPIO4_EDGE_HIGH: bool = false,
    GPIO5_LEVEL_LOW: bool = false,
    GPIO5_LEVEL_HIGH: bool = false,
    GPIO5_EDGE_LOW: bool = false,
    GPIO5_EDGE_HIGH: bool = false,
    GPIO6_LEVEL_LOW: bool = false,
    GPIO6_LEVEL_HIGH: bool = false,
    GPIO6_EDGE_LOW: bool = false,
    GPIO6_EDGE_HIGH: bool = false,
    GPIO7_LEVEL_LOW: bool = false,
    GPIO7_LEVEL_HIGH: bool = false,
    GPIO7_EDGE_LOW: bool = false,
    GPIO7_EDGE_HIGH: bool = false,
};

pub const Status = packed struct(u32) {
    _reserved_0: u8 = 0,
    OUTFROMPERI: u1 = 0,
    OUTTOPAD: u1 = 0,
    _reserved_a: u2 = 0,
    OEFROMPERI: u1 = 0,
    OETOPAD: u1 = 0,
    _reserved_e: u3 = 0,
    INFROMPAD: u1 = 0,
    _reserved_12: u1 = 0,
    INTOPERI: u1 = 0,
    _reserved_14: u4 = 0,
    IRQFROMPAD: u1 = 0,
    _reserved_19: u1 = 0,
    IRQTOPROC: u1 = 0,
    _reserved_1b: u5 = 0,
};

pub const IO_QSPI = extern struct {
    GPIO_QSPI_SCLK_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SCLK_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_sclk = 0x0,
            sio_30 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO_QSPI_SS_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SS_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_ss_n = 0x0,
            sio_31 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO_QSPI_SD0_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SD0_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_sd0 = 0x0,
            sio_32 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO_QSPI_SD1_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SD1_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_sd1 = 0x0,
            sio_33 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO_QSPI_SD2_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SD2_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_sd2 = 0x0,
            sio_34 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO_QSPI_SD3_STATUS: Mmio(Status, .rw),
    GPIO_QSPI_SD3_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            xip_sd3 = 0x0,
            sio_35 = 0x5,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    INTR: Mmio(QspiInterruptBitmap, .rw),
    PROC0_INTE: Mmio(QspiInterruptBitmap, .rw),
    PROC0_INTF: Mmio(QspiInterruptBitmap, .rw),
    PROC0_INTS: Mmio(QspiInterruptBitmap, .rw),
    PROC1_INTE: Mmio(QspiInterruptBitmap, .rw),
    PROC1_INTF: Mmio(QspiInterruptBitmap, .rw),
    PROC1_INTS: Mmio(QspiInterruptBitmap, .rw),
    DORMANT_WAKE_INTE: Mmio(QspiInterruptBitmap, .rw),
    DORMANT_WAKE_INTF: Mmio(QspiInterruptBitmap, .rw),
    DORMANT_WAKE_INTS: Mmio(QspiInterruptBitmap, .rw),
};

pub const IO_BANK0 = extern struct {
    GPIO0_STATUS: Mmio(Status, .rw),
    GPIO0_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            jtag_tck = 0x0,
            spi0_rx = 0x1,
            uart0_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_0 = 0x4,
            sio_0 = 0x5,
            pio0_0 = 0x6,
            pio1_0 = 0x7,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO1_STATUS: Mmio(Status, .rw),
    GPIO1_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            jtag_tms = 0x0,
            spi0_ss_n = 0x1,
            uart0_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_0 = 0x4,
            sio_1 = 0x5,
            pio0_1 = 0x6,
            pio1_1 = 0x7,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO2_STATUS: Mmio(Status, .rw),
    GPIO2_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            jtag_tdi = 0x0,
            spi0_sclk = 0x1,
            uart0_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_1 = 0x4,
            sio_2 = 0x5,
            pio0_2 = 0x6,
            pio1_2 = 0x7,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO3_STATUS: Mmio(Status, .rw),
    GPIO3_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            jtag_tdo = 0x0,
            spi0_tx = 0x1,
            uart0_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_1 = 0x4,
            sio_3 = 0x5,
            pio0_3 = 0x6,
            pio1_3 = 0x7,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO4_STATUS: Mmio(Status, .rw),
    GPIO4_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_rx = 0x1,
            uart1_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_2 = 0x4,
            sio_4 = 0x5,
            pio0_4 = 0x6,
            pio1_4 = 0x7,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO5_STATUS: Mmio(Status, .rw),
    GPIO5_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_ss_n = 0x1,
            uart1_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_2 = 0x4,
            sio_5 = 0x5,
            pio0_5 = 0x6,
            pio1_5 = 0x7,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO6_STATUS: Mmio(Status, .rw),
    GPIO6_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_sclk = 0x1,
            uart1_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_3 = 0x4,
            sio_6 = 0x5,
            pio0_6 = 0x6,
            pio1_6 = 0x7,
            usb_muxing_extphy_softcon = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO7_STATUS: Mmio(Status, .rw),
    GPIO7_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_tx = 0x1,
            uart1_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_3 = 0x4,
            sio_7 = 0x5,
            pio0_7 = 0x6,
            pio1_7 = 0x7,
            usb_muxing_extphy_oe_n = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO8_STATUS: Mmio(Status, .rw),
    GPIO8_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_rx = 0x1,
            uart1_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_4 = 0x4,
            sio_8 = 0x5,
            pio0_8 = 0x6,
            pio1_8 = 0x7,
            usb_muxing_extphy_rcv = 0x8,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO9_STATUS: Mmio(Status, .rw),
    GPIO9_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_ss_n = 0x1,
            uart1_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_4 = 0x4,
            sio_9 = 0x5,
            pio0_9 = 0x6,
            pio1_9 = 0x7,
            usb_muxing_extphy_vp = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO10_STATUS: Mmio(Status, .rw),
    GPIO10_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_sclk = 0x1,
            uart1_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_5 = 0x4,
            sio_10 = 0x5,
            pio0_10 = 0x6,
            pio1_10 = 0x7,
            usb_muxing_extphy_vm = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO11_STATUS: Mmio(Status, .rw),
    GPIO11_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_tx = 0x1,
            uart1_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_5 = 0x4,
            sio_11 = 0x5,
            pio0_11 = 0x6,
            pio1_11 = 0x7,
            usb_muxing_extphy_suspnd = 0x8,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO12_STATUS: Mmio(Status, .rw),
    GPIO12_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_rx = 0x1,
            uart0_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_6 = 0x4,
            sio_12 = 0x5,
            pio0_12 = 0x6,
            pio1_12 = 0x7,
            usb_muxing_extphy_speed = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO13_STATUS: Mmio(Status, .rw),
    GPIO13_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_ss_n = 0x1,
            uart0_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_6 = 0x4,
            sio_13 = 0x5,
            pio0_13 = 0x6,
            pio1_13 = 0x7,
            usb_muxing_extphy_vpo = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO14_STATUS: Mmio(Status, .rw),
    GPIO14_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_sclk = 0x1,
            uart0_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_7 = 0x4,
            sio_14 = 0x5,
            pio0_14 = 0x6,
            pio1_14 = 0x7,
            usb_muxing_extphy_vmo = 0x8,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO15_STATUS: Mmio(Status, .rw),
    GPIO15_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_tx = 0x1,
            uart0_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_7 = 0x4,
            sio_15 = 0x5,
            pio0_15 = 0x6,
            pio1_15 = 0x7,
            usb_muxing_digital_dp = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO16_STATUS: Mmio(Status, .rw),
    GPIO16_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_rx = 0x1,
            uart0_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_0 = 0x4,
            sio_16 = 0x5,
            pio0_16 = 0x6,
            pio1_16 = 0x7,
            usb_muxing_digital_dm = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO17_STATUS: Mmio(Status, .rw),
    GPIO17_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_ss_n = 0x1,
            uart0_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_0 = 0x4,
            sio_17 = 0x5,
            pio0_17 = 0x6,
            pio1_17 = 0x7,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO18_STATUS: Mmio(Status, .rw),
    GPIO18_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_sclk = 0x1,
            uart0_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_1 = 0x4,
            sio_18 = 0x5,
            pio0_18 = 0x6,
            pio1_18 = 0x7,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO19_STATUS: Mmio(Status, .rw),
    GPIO19_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_tx = 0x1,
            uart0_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_1 = 0x4,
            sio_19 = 0x5,
            pio0_19 = 0x6,
            pio1_19 = 0x7,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO20_STATUS: Mmio(Status, .rw),
    GPIO20_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_rx = 0x1,
            uart1_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_2 = 0x4,
            sio_20 = 0x5,
            pio0_20 = 0x6,
            pio1_20 = 0x7,
            clocks_gpin_0 = 0x8,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO21_STATUS: Mmio(Status, .rw),
    GPIO21_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_ss_n = 0x1,
            uart1_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_2 = 0x4,
            sio_21 = 0x5,
            pio0_21 = 0x6,
            pio1_21 = 0x7,
            clocks_gpout_0 = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO22_STATUS: Mmio(Status, .rw),
    GPIO22_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_sclk = 0x1,
            uart1_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_3 = 0x4,
            sio_22 = 0x5,
            pio0_22 = 0x6,
            pio1_22 = 0x7,
            clocks_gpin_1 = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO23_STATUS: Mmio(Status, .rw),
    GPIO23_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi0_tx = 0x1,
            uart1_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_3 = 0x4,
            sio_23 = 0x5,
            pio0_23 = 0x6,
            pio1_23 = 0x7,
            clocks_gpout_1 = 0x8,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO24_STATUS: Mmio(Status, .rw),
    GPIO24_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_rx = 0x1,
            uart1_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_4 = 0x4,
            sio_24 = 0x5,
            pio0_24 = 0x6,
            pio1_24 = 0x7,
            clocks_gpout_2 = 0x8,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO25_STATUS: Mmio(Status, .rw),
    GPIO25_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_ss_n = 0x1,
            uart1_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_4 = 0x4,
            sio_25 = 0x5,
            pio0_25 = 0x6,
            pio1_25 = 0x7,
            clocks_gpout_3 = 0x8,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO26_STATUS: Mmio(Status, .rw),
    GPIO26_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_sclk = 0x1,
            uart1_cts = 0x2,
            i2c1_sda = 0x3,
            pwm_a_5 = 0x4,
            sio_26 = 0x5,
            pio0_26 = 0x6,
            pio1_26 = 0x7,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO27_STATUS: Mmio(Status, .rw),
    GPIO27_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_tx = 0x1,
            uart1_rts = 0x2,
            i2c1_scl = 0x3,
            pwm_b_5 = 0x4,
            sio_27 = 0x5,
            pio0_27 = 0x6,
            pio1_27 = 0x7,
            usb_muxing_overcurr_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO28_STATUS: Mmio(Status, .rw),
    GPIO28_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_rx = 0x1,
            uart0_tx = 0x2,
            i2c0_sda = 0x3,
            pwm_a_6 = 0x4,
            sio_28 = 0x5,
            pio0_28 = 0x6,
            pio1_28 = 0x7,
            usb_muxing_vbus_detect = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    GPIO29_STATUS: Mmio(Status, .rw),
    GPIO29_CTRL: Mmio(packed struct(u32) {
        FUNCSEL: enum(u5) {
            spi1_ss_n = 0x1,
            uart0_rx = 0x2,
            i2c0_scl = 0x3,
            pwm_b_6 = 0x4,
            sio_29 = 0x5,
            pio0_29 = 0x6,
            pio1_29 = 0x7,
            usb_muxing_vbus_en = 0x9,
            null = 0x1F,
            _,
        } = .null,
        _reserved_5: u3 = 0,
        OUTOVER: ModeOverride = .normal,
        _reserved_a: u2 = 0,
        OEOVER: ModeOverride = .normal,
        _reserved_e: u2 = 0,
        INOVER: ModeOverride = .normal,
        _reserved_12: u10 = 0,
        IRQOVER: ModeOverride = .normal,
        _reserved_1e: u2 = 0,
    }, .rw),
    INTR0: Mmio(GpioInterruptBitmap0, .rw),
    INTR1: Mmio(GpioInterruptBitmap1, .rw),
    INTR2: Mmio(GpioInterruptBitmap2, .rw),
    INTR3: Mmio(GpioInterruptBitmap3, .rw),
    PROC0_INTE0: Mmio(GpioInterruptBitmap0, .rw),
    PROC0_INTE1: Mmio(GpioInterruptBitmap1, .rw),
    PROC0_INTE2: Mmio(GpioInterruptBitmap2, .rw),
    PROC0_INTE3: Mmio(GpioInterruptBitmap3, .rw),
    PROC0_INTF0: Mmio(GpioInterruptBitmap0, .rw),
    PROC0_INTF1: Mmio(GpioInterruptBitmap1, .rw),
    PROC0_INTF2: Mmio(GpioInterruptBitmap2, .rw),
    PROC0_INTF3: Mmio(GpioInterruptBitmap3, .rw),
    PROC0_INTS0: Mmio(GpioInterruptBitmap0, .rw),
    PROC0_INTS1: Mmio(GpioInterruptBitmap1, .rw),
    PROC0_INTS2: Mmio(GpioInterruptBitmap2, .rw),
    PROC0_INTS3: Mmio(GpioInterruptBitmap3, .rw),
    PROC1_INTE0: Mmio(GpioInterruptBitmap0, .rw),
    PROC1_INTE1: Mmio(GpioInterruptBitmap1, .rw),
    PROC1_INTE2: Mmio(GpioInterruptBitmap2, .rw),
    PROC1_INTE3: Mmio(GpioInterruptBitmap3, .rw),
    PROC1_INTF0: Mmio(GpioInterruptBitmap0, .rw),
    PROC1_INTF1: Mmio(GpioInterruptBitmap1, .rw),
    PROC1_INTF2: Mmio(GpioInterruptBitmap2, .rw),
    PROC1_INTF3: Mmio(GpioInterruptBitmap3, .rw),
    PROC1_INTS0: Mmio(GpioInterruptBitmap0, .rw),
    PROC1_INTS1: Mmio(GpioInterruptBitmap1, .rw),
    PROC1_INTS2: Mmio(GpioInterruptBitmap2, .rw),
    PROC1_INTS3: Mmio(GpioInterruptBitmap3, .rw),
    DORMANT_WAKE_INTE0: Mmio(GpioInterruptBitmap0, .rw),
    DORMANT_WAKE_INTE1: Mmio(GpioInterruptBitmap1, .rw),
    DORMANT_WAKE_INTE2: Mmio(GpioInterruptBitmap2, .rw),
    DORMANT_WAKE_INTE3: Mmio(GpioInterruptBitmap3, .rw),
    DORMANT_WAKE_INTF0: Mmio(GpioInterruptBitmap0, .rw),
    DORMANT_WAKE_INTF1: Mmio(GpioInterruptBitmap1, .rw),
    DORMANT_WAKE_INTF2: Mmio(GpioInterruptBitmap2, .rw),
    DORMANT_WAKE_INTF3: Mmio(GpioInterruptBitmap3, .rw),
    DORMANT_WAKE_INTS0: Mmio(GpioInterruptBitmap0, .rw),
    DORMANT_WAKE_INTS1: Mmio(GpioInterruptBitmap1, .rw),
    DORMANT_WAKE_INTS2: Mmio(GpioInterruptBitmap2, .rw),
    DORMANT_WAKE_INTS3: Mmio(GpioInterruptBitmap3, .rw),
};
