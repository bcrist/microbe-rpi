// Generated by https://github.com/bcrist/microbe-regz
const Mmio = @import("microbe").Mmio;

pub const CH7_CSR = packed struct(u32) {
    EN: u1 = 0,
    PH_CORRECT: u1 = 0,
    A_INV: u1 = 0,
    B_INV: u1 = 0,
    DIVMODE: enum(u2) {
        div = 0,
        level = 1,
        rise = 2,
        fall = 3,
    } = .div,
    PH_RET: u1 = 0,
    PH_ADV: u1 = 0,
    _reserved_8: u24 = 0,
};

pub const CH7_DIV = packed struct(u32) {
    FRAC: u4 = 0,
    INT: u8 = 1,
    _reserved_c: u20 = 0,
};

pub const CH7_CC = packed struct(u32) {
    A: u16 = 0,
    B: u16 = 0,
};

pub const INT = packed struct(u32) {
    CH0: u1 = 0,
    CH1: u1 = 0,
    CH2: u1 = 0,
    CH3: u1 = 0,
    CH4: u1 = 0,
    CH5: u1 = 0,
    CH6: u1 = 0,
    CH7: u1 = 0,
    _reserved_8: u24 = 0,
};

pub const PWM = extern struct {
    CH0_CSR: Mmio(CH7_CSR, .rw),
    CH0_DIV: Mmio(CH7_DIV, .rw),
    CH0_CTR: Mmio(packed struct(u32) {
        CH0_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH0_CC: Mmio(CH7_CC, .rw),
    CH0_TOP: Mmio(packed struct(u32) {
        CH0_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH1_CSR: Mmio(CH7_CSR, .rw),
    CH1_DIV: Mmio(CH7_DIV, .rw),
    CH1_CTR: Mmio(packed struct(u32) {
        CH1_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH1_CC: Mmio(CH7_CC, .rw),
    CH1_TOP: Mmio(packed struct(u32) {
        CH1_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH2_CSR: Mmio(CH7_CSR, .rw),
    CH2_DIV: Mmio(CH7_DIV, .rw),
    CH2_CTR: Mmio(packed struct(u32) {
        CH2_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH2_CC: Mmio(CH7_CC, .rw),
    CH2_TOP: Mmio(packed struct(u32) {
        CH2_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH3_CSR: Mmio(CH7_CSR, .rw),
    CH3_DIV: Mmio(CH7_DIV, .rw),
    CH3_CTR: Mmio(packed struct(u32) {
        CH3_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH3_CC: Mmio(CH7_CC, .rw),
    CH3_TOP: Mmio(packed struct(u32) {
        CH3_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH4_CSR: Mmio(CH7_CSR, .rw),
    CH4_DIV: Mmio(CH7_DIV, .rw),
    CH4_CTR: Mmio(packed struct(u32) {
        CH4_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH4_CC: Mmio(CH7_CC, .rw),
    CH4_TOP: Mmio(packed struct(u32) {
        CH4_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH5_CSR: Mmio(CH7_CSR, .rw),
    CH5_DIV: Mmio(CH7_DIV, .rw),
    CH5_CTR: Mmio(packed struct(u32) {
        CH5_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH5_CC: Mmio(CH7_CC, .rw),
    CH5_TOP: Mmio(packed struct(u32) {
        CH5_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH6_CSR: Mmio(CH7_CSR, .rw),
    CH6_DIV: Mmio(CH7_DIV, .rw),
    CH6_CTR: Mmio(packed struct(u32) {
        CH6_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH6_CC: Mmio(CH7_CC, .rw),
    CH6_TOP: Mmio(packed struct(u32) {
        CH6_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    CH7_CSR: Mmio(CH7_CSR, .rw),
    CH7_DIV: Mmio(CH7_DIV, .rw),
    CH7_CTR: Mmio(packed struct(u32) {
        CH7_CTR: u16 = 0,
        _reserved_10: u16 = 0,
    }, .rw),
    CH7_CC: Mmio(CH7_CC, .rw),
    CH7_TOP: Mmio(packed struct(u32) {
        CH7_TOP: u16 = 0xFFFF,
        _reserved_10: u16 = 0,
    }, .rw),
    EN: Mmio(INT, .rw),
    INTR: Mmio(INT, .rw),
    INTE: Mmio(INT, .rw),
    INTF: Mmio(INT, .rw),
    INTS: Mmio(INT, .rw),
};
